Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
76822640;26707385;2844724;2;9fd42093-133f-441c-8772-03ccbf95ba4d;2014-11-03 03:34:01.0;"I have an app I am trying to pass data through an ASYNC task but am getting a null pointer error in my onPosteExecute method. Seems like no matter how I change my code I still get this same fatal error:&#xD;&#xA;&#xD;&#xA;     10-31 18:43:56.517    1253-1253/com.brianstacks.project1 E/AndroidRuntimeï¹• FATAL EXCEPTION: main&#xD;&#xA;        Process: com.brianstacks.project1, PID: 1253&#xD;&#xA;        java.lang.NullPointerException&#xD;&#xA;                at com.brianstacks.project1.MainActivity$MyTask.onPostExecute(MainActivity.java:277)&#xD;&#xA;                at com.brianstacks.project1.MainActivity$MyTask.onPostExecute(MainActivity.java:247)&#xD;&#xA;                at android.os.AsyncTask.finish(AsyncTask.java:632)&#xD;&#xA;                at android.os.AsyncTask.access$600(AsyncTask.java:177)&#xD;&#xA;                at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:645)&#xD;&#xA;                at android.os.Handler.dispatchMessage(Handler.java:102)&#xD;&#xA;                at android.os.Looper.loop(Looper.java:136)&#xD;&#xA;                at android.app.ActivityThread.main(ActivityThread.java:5001)&#xD;&#xA;                at java.lang.reflect.Method.invokeNative(Native Method)&#xD;&#xA;                at java.lang.reflect.Method.invoke(Method.java:515)&#xD;&#xA;                at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)&#xD;&#xA;                at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)&#xD;&#xA;                at dalvik.system.NativeStart.main(Native Method)&#xD;&#xA;&#xD;&#xA;Here is my code:&#xD;&#xA;&#xD;&#xA;MainActivity.java&#xD;&#xA;&#xD;&#xA;    public class MainActivity extends ListActivity implements MasterFragment.OnListItemClickListener {&#xD;&#xA;    &#xD;&#xA;        final String Tag = ""Project 1 test"";&#xD;&#xA;        EditText myEdit;&#xD;&#xA;        Button myButton;&#xD;&#xA;        ProgressBar pb;&#xD;&#xA;        SerialCustomObject myObject;&#xD;&#xA;        // create a reference to the list's needed for data&#xD;&#xA;        List<MyTask> tasks;&#xD;&#xA;        ArrayList<Places>  placeList;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            if ((savedInstanceState != null)&& (savedInstanceState.getSerializable(""name"") != null)) {&#xD;&#xA;            Places name = (Places) savedInstanceState.getSerializable(""name"");&#xD;&#xA;                Log.v(""name:"",name.getName());&#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            //initiate my tasks&#xD;&#xA;            tasks = new ArrayList<>();&#xD;&#xA;            pb = (ProgressBar)findViewById(R.id.progressBar);&#xD;&#xA;            myEdit = (EditText)findViewById(R.id.myEditText);&#xD;&#xA;            myButton = (Button)findViewById(R.id.myButton);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onCreateOptionsMenu(Menu menu) {&#xD;&#xA;            // Inflate the menu; this adds items to the action bar if it is present.&#xD;&#xA;            getMenuInflater().inflate(R.menu.main, menu);&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onOptionsItemSelected(MenuItem item) {&#xD;&#xA;            // Handle action bar item clicks here. The action bar will&#xD;&#xA;            // automatically handle clicks on the Home/Up button, so long&#xD;&#xA;            // as you specify a parent activity in AndroidManifest.xml.&#xD;&#xA;            int id = item.getItemId();&#xD;&#xA;            return id == R.id.action_settings || super.onOptionsItemSelected(item);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void findAndRemoveFragment() {&#xD;&#xA;            FragmentManager mgr = getFragmentManager();&#xD;&#xA;            DetailFragment frag =&#xD;&#xA;                    (DetailFragment) mgr.findFragmentByTag(DetailFragment.TAG);&#xD;&#xA;    &#xD;&#xA;            if (frag == null) {&#xD;&#xA;                // No fragment found, possibly because the transaction&#xD;&#xA;                // hasn't completed yet.&#xD;&#xA;            } else {&#xD;&#xA;                // Fragment found. You can use it here.&#xD;&#xA;                FragmentTransaction trans = mgr.beginTransaction();&#xD;&#xA;                trans.remove(frag);&#xD;&#xA;                trans.commit();&#xD;&#xA;                // When the main thread runs, the fragment will be&#xD;&#xA;                // removed from the activity.&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void deviceStorage() {&#xD;&#xA;            // Read in a private file&#xD;&#xA;            try {&#xD;&#xA;                FileInputStream fis = this.openFileInput(""some_file.txt"");&#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;            // Create new or open existing private file&#xD;&#xA;            try {&#xD;&#xA;                FileOutputStream fos = this.openFileOutput(""some_other_file.txt"", Context.MODE_PRIVATE);&#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void writeToFile(Context _c, String _filename, String _data) {&#xD;&#xA;            File external = _c.getExternalFilesDir(null);&#xD;&#xA;            File file = new File(external, _filename);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                FileOutputStream fos = new FileOutputStream(file);&#xD;&#xA;                ObjectOutputStream oos = new ObjectOutputStream(fos);&#xD;&#xA;    &#xD;&#xA;                if(myObject == null) {&#xD;&#xA;                    myObject = new SerialCustomObject();&#xD;&#xA;                }&#xD;&#xA;                myObject.setData(_data);&#xD;&#xA;    &#xD;&#xA;                oos.writeObject(myObject);&#xD;&#xA;                oos.close();&#xD;&#xA;                // Write bytes to the stream&#xD;&#xA;                fos.write(_data.getBytes());&#xD;&#xA;    &#xD;&#xA;                // Close the stream to save the file.&#xD;&#xA;                fos.close();&#xD;&#xA;    &#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private String readFromFile(String _filename) {&#xD;&#xA;            File external = getExternalFilesDir(null);&#xD;&#xA;            File file = new File(external, _filename);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                FileInputStream fin = new FileInputStream(file);&#xD;&#xA;                InputStreamReader inReader = new InputStreamReader(fin);&#xD;&#xA;                BufferedReader reader = new BufferedReader(inReader);&#xD;&#xA;    &#xD;&#xA;                // Reading data from our file using the reader&#xD;&#xA;                // and storing it our string buffer.&#xD;&#xA;                StringBuffer buffer = new StringBuffer();&#xD;&#xA;                String text = null;&#xD;&#xA;                // Make sure a line of text is available to be read.&#xD;&#xA;                while((text = reader.readLine()) != null) {&#xD;&#xA;                    buffer.append(text + ""\n"");&#xD;&#xA;                }&#xD;&#xA;                // Close the reader and underlying stream.&#xD;&#xA;                reader.close();&#xD;&#xA;                // Convert the buffer to a string.&#xD;&#xA;                return buffer.toString();&#xD;&#xA;            } catch(IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void displayText(String myText) {&#xD;&#xA;    &#xD;&#xA;            DetailFragment frag = (DetailFragment) getFragmentManager().findFragmentByTag(DetailFragment.TAG);&#xD;&#xA;            if (frag == null){&#xD;&#xA;                frag = DetailFragment.newInstance(myText);&#xD;&#xA;                getFragmentManager().beginTransaction()&#xD;&#xA;                        .replace(R.id.container2,frag,DetailFragment.TAG)&#xD;&#xA;                        .commit();&#xD;&#xA;            }else {&#xD;&#xA;                frag.setDisplayInfo(myText);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        //@Override&#xD;&#xA;        public void onClick(View _v){&#xD;&#xA;    &#xD;&#xA;                myEdit = (EditText)findViewById(R.id.myEditText);&#xD;&#xA;                String newString = myEdit.getText().toString();&#xD;&#xA;                Log.v(Tag,newString);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        // the method for when the button is clicked&#xD;&#xA;        public void myClick(View _v){&#xD;&#xA;            // create a string to grab the text of the edit text&#xD;&#xA;            String myString = myEdit.getText().toString();&#xD;&#xA;            // replace the spaces with + to encode into the url&#xD;&#xA;            String encodedString = myString.replace("" "",""+"");&#xD;&#xA;            //check to see if online and if so continue to get the JSON data if not toast a message telling the user no connection&#xD;&#xA;            if (isOnline()){&#xD;&#xA;                requestData(""https://maps.googleapis.com/maps/api/place/textsearch/json?query=""+encodedString+""&key=AIzaSyB9iOw6wF4FwbOdUTZYiU_MxsbfWM5iMOI"");&#xD;&#xA;            }else Toast.makeText(this, ""Network isn't available"", Toast.LENGTH_SHORT).show();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // method to get the data from ASYNC task&#xD;&#xA;        private void requestData(String uri) {&#xD;&#xA;            MyTask task = new MyTask();&#xD;&#xA;            task.execute(uri);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // method to check internet connectivity&#xD;&#xA;        protected boolean isOnline(){&#xD;&#xA;            ConnectivityManager cm =(ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);&#xD;&#xA;            NetworkInfo netInfo = cm.getActiveNetworkInfo();&#xD;&#xA;            return netInfo != null && netInfo.isConnectedOrConnecting();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        protected void updateDisplay(ArrayList<Places> placeList){&#xD;&#xA;    &#xD;&#xA;            // get instance of the Master List fragment then replaces container1 and commits it to the activity&#xD;&#xA;    &#xD;&#xA;            MasterFragment frag = MasterFragment.newInstance(placeList);&#xD;&#xA;    &#xD;&#xA;            getFragmentManager().beginTransaction()&#xD;&#xA;    &#xD;&#xA;                    .replace(R.id.container1, frag, MasterFragment.TAG).commit();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        // Async task method to do network action in&#xD;&#xA;        private class MyTask extends AsyncTask<String ,String ,String>{&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPreExecute() {&#xD;&#xA;                // add this to the task&#xD;&#xA;                tasks.add(this);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected String doInBackground(String... params) {&#xD;&#xA;                return HttpManager.getData(params[0]);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPostExecute(String result) {&#xD;&#xA;                tasks.remove(this);&#xD;&#xA;                if(null != result && !result.isEmpty()) {&#xD;&#xA;                    placeList = JSONParser.parseFeed(result);&#xD;&#xA;                    updateDisplay(placeList);&#xD;&#xA;                }else {&#xD;&#xA;                    Toast.makeText(MainActivity.this, ""Can't connect to API"", Toast.LENGTH_SHORT).show();&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onProgressUpdate(String... values) {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;DetailFragment.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1.fragments;&#xD;&#xA;    &#xD;&#xA;    import android.app.Fragment;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.view.LayoutInflater;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.ViewGroup;&#xD;&#xA;    import android.widget.TextView;&#xD;&#xA;    &#xD;&#xA;    import com.brianstacks.project1.R;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/27/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class DetailFragment extends Fragment {&#xD;&#xA;    &#xD;&#xA;        public static final String TAG = ""DetailFragment.TAG"";&#xD;&#xA;        public static final String ARG_TAG = ""DetailFragment.TAG"";&#xD;&#xA;    &#xD;&#xA;        public static DetailFragment newInstance(String myString) {&#xD;&#xA;            DetailFragment frag = new DetailFragment();&#xD;&#xA;    &#xD;&#xA;            Bundle args = new Bundle();&#xD;&#xA;            args.putString(ARG_TAG, myString);&#xD;&#xA;            frag.setArguments(args);&#xD;&#xA;    &#xD;&#xA;            return frag;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View onCreateView(LayoutInflater _inflater, ViewGroup _container,&#xD;&#xA;                                 Bundle _savedInstanceState) {&#xD;&#xA;            // Create and return view for this fragment.&#xD;&#xA;            return _inflater.inflate(R.layout.detail_layout, _container, false);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityCreated(Bundle _savedInstanceState) {&#xD;&#xA;            super.onActivityCreated(_savedInstanceState);&#xD;&#xA;    &#xD;&#xA;            Bundle args = getArguments();&#xD;&#xA;            if(args != null && args.containsKey(ARG_TAG)){&#xD;&#xA;                setDisplayInfo(args.getString(ARG_TAG));&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setDisplayInfo(String myText){&#xD;&#xA;            getArguments().putString(ARG_TAG,myText);&#xD;&#xA;            // Get our TextView and set some text to it.&#xD;&#xA;            TextView tv;&#xD;&#xA;            tv = (TextView)getView().findViewById(R.id.detailText);&#xD;&#xA;            tv.setText(myText);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;MasterFragment.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1.fragments;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.app.AlertDialog;&#xD;&#xA;    import android.app.ListFragment;&#xD;&#xA;    import android.content.BroadcastReceiver;&#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.content.DialogInterface;&#xD;&#xA;    import android.content.Intent;&#xD;&#xA;    import android.content.IntentFilter;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.os.Parcelable;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.widget.AdapterView;&#xD;&#xA;    import android.widget.ArrayAdapter;&#xD;&#xA;    import android.widget.ListView;&#xD;&#xA;    &#xD;&#xA;    import com.brianstacks.project1.JSONParser;&#xD;&#xA;    import com.brianstacks.project1.MainActivity;&#xD;&#xA;    import com.brianstacks.project1.Places;&#xD;&#xA;    import com.brianstacks.project1.PlacesAdapter;&#xD;&#xA;    import com.brianstacks.project1.R;&#xD;&#xA;    &#xD;&#xA;    import java.io.Serializable;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/27/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class MasterFragment extends ListFragment{&#xD;&#xA;    &#xD;&#xA;        public static final String TAG = ""MasterFragment.TAG"";&#xD;&#xA;        public static final String KEY = ""places"";&#xD;&#xA;        private OnListItemClickListener mListener;&#xD;&#xA;        private ArrayList<Places> placeList2;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public static MasterFragment newInstance(ArrayList<Places> placeList) {&#xD;&#xA;            MasterFragment masterFragment = new MasterFragment();&#xD;&#xA;    &#xD;&#xA;            Bundle args = new Bundle();&#xD;&#xA;    &#xD;&#xA;            args.putSerializable(""places"", placeList);&#xD;&#xA;    &#xD;&#xA;            masterFragment.setArguments(args);&#xD;&#xA;    &#xD;&#xA;            return masterFragment;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public interface OnListItemClickListener{&#xD;&#xA;            public void displayText(String myText);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void  onAttach(Activity activity){&#xD;&#xA;            super.onAttach(activity);&#xD;&#xA;    &#xD;&#xA;            if (activity instanceof OnListItemClickListener){&#xD;&#xA;                mListener = (OnListItemClickListener) activity;&#xD;&#xA;            }else {&#xD;&#xA;                throw new IllegalArgumentException(""Containing Activity must implement the OnListItemClicked"");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityCreated(Bundle _savedInstanceState) {&#xD;&#xA;            super.onActivityCreated(_savedInstanceState);&#xD;&#xA;            if (_savedInstanceState == null){&#xD;&#xA;                Bundle args = getArguments();&#xD;&#xA;                String myStrings=args.getString(""places"");&#xD;&#xA;                Log.v(""Places"",myStrings);&#xD;&#xA;    &#xD;&#xA;            /*String[] presidents = getResources().getStringArray(R.array.presidents);&#xD;&#xA;            //ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_list_item_1, presidents);&#xD;&#xA;            //PlacesAdapter adapter2 = new PlacesAdapter(this.getActivity(),R.layout.item_place,placeList);&#xD;&#xA;            //setListAdapter(adapter2);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onListItemClick(ListView _l, View _v, int _position, long _id) {&#xD;&#xA;            String president = (String)_l.getItemAtPosition(_position);&#xD;&#xA;            mListener.displayText(president);&#xD;&#xA;            */&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;HTTPManager.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import java.io.BufferedReader;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.io.InputStreamReader;&#xD;&#xA;    import java.net.HttpURLConnection;&#xD;&#xA;    import java.net.URL;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/20/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class HttpManager {&#xD;&#xA;    &#xD;&#xA;        public  static  String getData(String uri){&#xD;&#xA;            BufferedReader reader = null;&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                URL url = new URL(uri);&#xD;&#xA;                HttpURLConnection con = (HttpURLConnection) url.openConnection();&#xD;&#xA;    &#xD;&#xA;                StringBuilder sb = new StringBuilder();&#xD;&#xA;                reader = new BufferedReader(new InputStreamReader(con.getInputStream()));&#xD;&#xA;    &#xD;&#xA;                String line;&#xD;&#xA;                while ((line = reader.readLine()) != null){&#xD;&#xA;                    sb.append(line).append("""");&#xD;&#xA;                }&#xD;&#xA;                return sb.toString();&#xD;&#xA;    &#xD;&#xA;            }catch (Exception e){&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;            }finally {&#xD;&#xA;                if (reader!=null) {&#xD;&#xA;                    try {&#xD;&#xA;                        reader.close();&#xD;&#xA;                    } catch (IOException e) {&#xD;&#xA;                        e.printStackTrace();&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;JSONParser.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import org.json.JSONArray;&#xD;&#xA;    import org.json.JSONException;&#xD;&#xA;    import org.json.JSONObject;&#xD;&#xA;    &#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/20/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class JSONParser {&#xD;&#xA;    &#xD;&#xA;        public static ArrayList<Places> parseFeed(String content) {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            JSONObject myObj;&#xD;&#xA;            try {&#xD;&#xA;                myObj = new JSONObject(content);&#xD;&#xA;                JSONArray result = myObj.getJSONArray(""results"");&#xD;&#xA;                ArrayList<Places> placeList = new ArrayList<>();&#xD;&#xA;    &#xD;&#xA;                for (int i = 0; i < result.length(); i++) {&#xD;&#xA;                    JSONObject obj = result.getJSONObject(i);&#xD;&#xA;                    Places place = new Places();&#xD;&#xA;                    place.setName(obj.getString(""name""));&#xD;&#xA;                    place.setFormatted_address(obj.getString(""formatted_address""));&#xD;&#xA;                    place.setTypes(obj.getString(""types""));&#xD;&#xA;                    //place.setPhotos(obj.getString(""photos""));&#xD;&#xA;    &#xD;&#xA;                    placeList.add(place);&#xD;&#xA;                }&#xD;&#xA;                return placeList;&#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;Places.java&#xD;&#xA;&#xD;&#xA;    import java.io.Serializable;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/22/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class Places implements Serializable {&#xD;&#xA;    &#xD;&#xA;        private String pName;&#xD;&#xA;        private String pTypes;&#xD;&#xA;        private String pFormatted_address;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public Places(){&#xD;&#xA;            pName ="""";&#xD;&#xA;            pTypes ="""";&#xD;&#xA;            pFormatted_address = """";&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public String getName() {&#xD;&#xA;            return pName;&#xD;&#xA;        }&#xD;&#xA;        public void setName(String name) {&#xD;&#xA;            pName = name;&#xD;&#xA;        }&#xD;&#xA;        public String getTypes() {&#xD;&#xA;            return pTypes;&#xD;&#xA;        }&#xD;&#xA;        public void  setTypes(String types) {&#xD;&#xA;            pTypes= types;&#xD;&#xA;        }&#xD;&#xA;        public String getFormatted_address() {&#xD;&#xA;            return pFormatted_address;&#xD;&#xA;        }&#xD;&#xA;        public void setFormatted_address(String formatted_address) {&#xD;&#xA;            pFormatted_address=formatted_address;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Any help is much appreciated ";;
76822981;26707385;2844724;5;551a5654-b2e7-4781-8f6d-200733234a62;2014-11-03 03:48:01.0;"I have an app I am trying to pass data through an ASYNC task but am getting a null pointer error in my onPosteExecute method. Seems like no matter how I change my code I still get this same fatal error:&#xD;&#xA;&#xD;&#xA;     10-31 18:43:56.517    1253-1253/com.brianstacks.project1 E/AndroidRuntimeï¹• FATAL EXCEPTION: main&#xD;&#xA;        Process: com.brianstacks.project1, PID: 1253&#xD;&#xA;        java.lang.NullPointerException&#xD;&#xA;                at com.brianstacks.project1.MainActivity$MyTask.onPostExecute(MainActivity.java:277)&#xD;&#xA;                at com.brianstacks.project1.MainActivity$MyTask.onPostExecute(MainActivity.java:247)&#xD;&#xA;                at android.os.AsyncTask.finish(AsyncTask.java:632)&#xD;&#xA;                at android.os.AsyncTask.access$600(AsyncTask.java:177)&#xD;&#xA;                at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:645)&#xD;&#xA;                at android.os.Handler.dispatchMessage(Handler.java:102)&#xD;&#xA;                at android.os.Looper.loop(Looper.java:136)&#xD;&#xA;                at android.app.ActivityThread.main(ActivityThread.java:5001)&#xD;&#xA;                at java.lang.reflect.Method.invokeNative(Native Method)&#xD;&#xA;                at java.lang.reflect.Method.invoke(Method.java:515)&#xD;&#xA;                at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)&#xD;&#xA;                at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)&#xD;&#xA;                at dalvik.system.NativeStart.main(Native Method)&#xD;&#xA;&#xD;&#xA;Here is my code:&#xD;&#xA;&#xD;&#xA;MainActivity.java&#xD;&#xA;&#xD;&#xA;    public class MainActivity extends ListActivity implements MasterFragment.OnListItemClickListener {&#xD;&#xA;    &#xD;&#xA;        final String Tag = ""Project 1 test"";&#xD;&#xA;        EditText myEdit;&#xD;&#xA;        Button myButton;&#xD;&#xA;        ProgressBar pb;&#xD;&#xA;        SerialCustomObject myObject;&#xD;&#xA;        // create a reference to the list's needed for data&#xD;&#xA;        List<MyTask> tasks;&#xD;&#xA;        ArrayList<Places>  placeList;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            if ((savedInstanceState != null)&& (savedInstanceState.getSerializable(""name"") != null)) {&#xD;&#xA;            Places name = (Places) savedInstanceState.getSerializable(""name"");&#xD;&#xA;                Log.v(""name:"",name.getName());&#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            //initiate my tasks&#xD;&#xA;            tasks = new ArrayList<>();&#xD;&#xA;            pb = (ProgressBar)findViewById(R.id.progressBar);&#xD;&#xA;            myEdit = (EditText)findViewById(R.id.myEditText);&#xD;&#xA;            myButton = (Button)findViewById(R.id.myButton);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onCreateOptionsMenu(Menu menu) {&#xD;&#xA;            // Inflate the menu; this adds items to the action bar if it is present.&#xD;&#xA;            getMenuInflater().inflate(R.menu.main, menu);&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onOptionsItemSelected(MenuItem item) {&#xD;&#xA;            // Handle action bar item clicks here. The action bar will&#xD;&#xA;            // automatically handle clicks on the Home/Up button, so long&#xD;&#xA;            // as you specify a parent activity in AndroidManifest.xml.&#xD;&#xA;            int id = item.getItemId();&#xD;&#xA;            return id == R.id.action_settings || super.onOptionsItemSelected(item);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void findAndRemoveFragment() {&#xD;&#xA;            FragmentManager mgr = getFragmentManager();&#xD;&#xA;            DetailFragment frag =&#xD;&#xA;                    (DetailFragment) mgr.findFragmentByTag(DetailFragment.TAG);&#xD;&#xA;    &#xD;&#xA;            if (frag == null) {&#xD;&#xA;                // No fragment found, possibly because the transaction&#xD;&#xA;                // hasn't completed yet.&#xD;&#xA;            } else {&#xD;&#xA;                // Fragment found. You can use it here.&#xD;&#xA;                FragmentTransaction trans = mgr.beginTransaction();&#xD;&#xA;                trans.remove(frag);&#xD;&#xA;                trans.commit();&#xD;&#xA;                // When the main thread runs, the fragment will be&#xD;&#xA;                // removed from the activity.&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void deviceStorage() {&#xD;&#xA;            // Read in a private file&#xD;&#xA;            try {&#xD;&#xA;                FileInputStream fis = this.openFileInput(""some_file.txt"");&#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;            // Create new or open existing private file&#xD;&#xA;            try {&#xD;&#xA;                FileOutputStream fos = this.openFileOutput(""some_other_file.txt"", Context.MODE_PRIVATE);&#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void writeToFile(Context _c, String _filename, String _data) {&#xD;&#xA;            File external = _c.getExternalFilesDir(null);&#xD;&#xA;            File file = new File(external, _filename);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                FileOutputStream fos = new FileOutputStream(file);&#xD;&#xA;                ObjectOutputStream oos = new ObjectOutputStream(fos);&#xD;&#xA;    &#xD;&#xA;                if(myObject == null) {&#xD;&#xA;                    myObject = new SerialCustomObject();&#xD;&#xA;                }&#xD;&#xA;                myObject.setData(_data);&#xD;&#xA;    &#xD;&#xA;                oos.writeObject(myObject);&#xD;&#xA;                oos.close();&#xD;&#xA;                // Write bytes to the stream&#xD;&#xA;                fos.write(_data.getBytes());&#xD;&#xA;    &#xD;&#xA;                // Close the stream to save the file.&#xD;&#xA;                fos.close();&#xD;&#xA;    &#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private String readFromFile(String _filename) {&#xD;&#xA;            File external = getExternalFilesDir(null);&#xD;&#xA;            File file = new File(external, _filename);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                FileInputStream fin = new FileInputStream(file);&#xD;&#xA;                InputStreamReader inReader = new InputStreamReader(fin);&#xD;&#xA;                BufferedReader reader = new BufferedReader(inReader);&#xD;&#xA;    &#xD;&#xA;                // Reading data from our file using the reader&#xD;&#xA;                // and storing it our string buffer.&#xD;&#xA;                StringBuffer buffer = new StringBuffer();&#xD;&#xA;                String text = null;&#xD;&#xA;                // Make sure a line of text is available to be read.&#xD;&#xA;                while((text = reader.readLine()) != null) {&#xD;&#xA;                    buffer.append(text + ""\n"");&#xD;&#xA;                }&#xD;&#xA;                // Close the reader and underlying stream.&#xD;&#xA;                reader.close();&#xD;&#xA;                // Convert the buffer to a string.&#xD;&#xA;                return buffer.toString();&#xD;&#xA;            } catch(IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void displayText(String myText) {&#xD;&#xA;    &#xD;&#xA;            DetailFragment frag = (DetailFragment) getFragmentManager().findFragmentByTag(DetailFragment.TAG);&#xD;&#xA;            if (frag == null){&#xD;&#xA;                frag = DetailFragment.newInstance(myText);&#xD;&#xA;                getFragmentManager().beginTransaction()&#xD;&#xA;                        .replace(R.id.container2,frag,DetailFragment.TAG)&#xD;&#xA;                        .commit();&#xD;&#xA;            }else {&#xD;&#xA;                frag.setDisplayInfo(myText);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        //@Override&#xD;&#xA;        public void onClick(View _v){&#xD;&#xA;    &#xD;&#xA;                myEdit = (EditText)findViewById(R.id.myEditText);&#xD;&#xA;                String newString = myEdit.getText().toString();&#xD;&#xA;                Log.v(Tag,newString);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        // the method for when the button is clicked&#xD;&#xA;        public void myClick(View _v){&#xD;&#xA;            // create a string to grab the text of the edit text&#xD;&#xA;            String myString = myEdit.getText().toString();&#xD;&#xA;            // replace the spaces with + to encode into the url&#xD;&#xA;            String encodedString = myString.replace("" "",""+"");&#xD;&#xA;            //check to see if online and if so continue to get the JSON data if not toast a message telling the user no connection&#xD;&#xA;            if (isOnline()){&#xD;&#xA;                requestData(""https://maps.googleapis.com/maps/api/place/textsearch/json?query=""+encodedString+""&key=AIzaSyB9iOw6wF4FwbOdUTZYiU_MxsbfWM5iMOI"");&#xD;&#xA;            }else Toast.makeText(this, ""Network isn't available"", Toast.LENGTH_SHORT).show();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // method to get the data from ASYNC task&#xD;&#xA;        private void requestData(String uri) {&#xD;&#xA;            MyTask task = new MyTask();&#xD;&#xA;            task.execute(uri);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // method to check internet connectivity&#xD;&#xA;        protected boolean isOnline(){&#xD;&#xA;            ConnectivityManager cm =(ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);&#xD;&#xA;            NetworkInfo netInfo = cm.getActiveNetworkInfo();&#xD;&#xA;            return netInfo != null && netInfo.isConnectedOrConnecting();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        protected void updateDisplay(ArrayList<Places> placeList){&#xD;&#xA;    &#xD;&#xA;            // get instance of the Master List fragment then replaces container1 and commits it to the activity&#xD;&#xA;    &#xD;&#xA;            MasterFragment frag = MasterFragment.newInstance(placeList);&#xD;&#xA;    &#xD;&#xA;            getFragmentManager().beginTransaction()&#xD;&#xA;    &#xD;&#xA;                    .replace(R.id.container1, frag, MasterFragment.TAG).commit();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        // Async task method to do network action in&#xD;&#xA;        private class MyTask extends AsyncTask<String ,String ,String>{&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPreExecute() {&#xD;&#xA;                // add this to the task&#xD;&#xA;                tasks.add(this);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected String doInBackground(String... params) {&#xD;&#xA;                return HttpManager.getData(params[0]);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPostExecute(String result) {&#xD;&#xA;                tasks.remove(this);&#xD;&#xA;                if(null != result && !result.isEmpty()) {&#xD;&#xA;                    placeList = JSONParser.parseFeed(result);&#xD;&#xA;                    updateDisplay(placeList);&#xD;&#xA;                }else {&#xD;&#xA;                    Toast.makeText(MainActivity.this, ""Can't connect to API"", Toast.LENGTH_SHORT).show();&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onProgressUpdate(String... values) {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;DetailFragment.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1.fragments;&#xD;&#xA;    &#xD;&#xA;    import android.app.Fragment;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.view.LayoutInflater;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.ViewGroup;&#xD;&#xA;    import android.widget.TextView;&#xD;&#xA;    &#xD;&#xA;    import com.brianstacks.project1.R;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/27/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class DetailFragment extends Fragment {&#xD;&#xA;    &#xD;&#xA;        public static final String TAG = ""DetailFragment.TAG"";&#xD;&#xA;        public static final String ARG_TAG = ""DetailFragment.TAG"";&#xD;&#xA;    &#xD;&#xA;        public static DetailFragment newInstance(String myString) {&#xD;&#xA;            DetailFragment frag = new DetailFragment();&#xD;&#xA;    &#xD;&#xA;            Bundle args = new Bundle();&#xD;&#xA;            args.putString(ARG_TAG, myString);&#xD;&#xA;            frag.setArguments(args);&#xD;&#xA;    &#xD;&#xA;            return frag;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View onCreateView(LayoutInflater _inflater, ViewGroup _container,&#xD;&#xA;                                 Bundle _savedInstanceState) {&#xD;&#xA;            // Create and return view for this fragment.&#xD;&#xA;            return _inflater.inflate(R.layout.detail_layout, _container, false);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityCreated(Bundle _savedInstanceState) {&#xD;&#xA;            super.onActivityCreated(_savedInstanceState);&#xD;&#xA;    &#xD;&#xA;            Bundle args = getArguments();&#xD;&#xA;            if(args != null && args.containsKey(ARG_TAG)){&#xD;&#xA;                setDisplayInfo(args.getString(ARG_TAG));&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setDisplayInfo(String myText){&#xD;&#xA;            getArguments().putString(ARG_TAG,myText);&#xD;&#xA;            // Get our TextView and set some text to it.&#xD;&#xA;            TextView tv;&#xD;&#xA;            tv = (TextView)getView().findViewById(R.id.detailText);&#xD;&#xA;            tv.setText(myText);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;MasterFragment.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1.fragments;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.app.AlertDialog;&#xD;&#xA;    import android.app.ListFragment;&#xD;&#xA;    import android.content.BroadcastReceiver;&#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.content.DialogInterface;&#xD;&#xA;    import android.content.Intent;&#xD;&#xA;    import android.content.IntentFilter;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.os.Parcelable;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.widget.AdapterView;&#xD;&#xA;    import android.widget.ArrayAdapter;&#xD;&#xA;    import android.widget.ListView;&#xD;&#xA;    &#xD;&#xA;    import com.brianstacks.project1.JSONParser;&#xD;&#xA;    import com.brianstacks.project1.MainActivity;&#xD;&#xA;    import com.brianstacks.project1.Places;&#xD;&#xA;    import com.brianstacks.project1.PlacesAdapter;&#xD;&#xA;    import com.brianstacks.project1.R;&#xD;&#xA;    &#xD;&#xA;    import java.io.Serializable;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/27/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class MasterFragment extends ListFragment{&#xD;&#xA;    &#xD;&#xA;        public static final String TAG = ""MasterFragment.TAG"";&#xD;&#xA;        public static final String KEY = ""places"";&#xD;&#xA;        private OnListItemClickListener mListener;&#xD;&#xA;        private ArrayList<Places> placeList2;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public static MasterFragment newInstance(ArrayList<Places> placeList) {&#xD;&#xA;            MasterFragment masterFragment = new MasterFragment();&#xD;&#xA;    &#xD;&#xA;            Bundle args = new Bundle();&#xD;&#xA;    &#xD;&#xA;            args.putSerializable(""places"", placeList);&#xD;&#xA;    &#xD;&#xA;            masterFragment.setArguments(args);&#xD;&#xA;    &#xD;&#xA;            return masterFragment;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public interface OnListItemClickListener{&#xD;&#xA;            public void displayText(String myText);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void  onAttach(Activity activity){&#xD;&#xA;            super.onAttach(activity);&#xD;&#xA;    &#xD;&#xA;            if (activity instanceof OnListItemClickListener){&#xD;&#xA;                mListener = (OnListItemClickListener) activity;&#xD;&#xA;            }else {&#xD;&#xA;                throw new IllegalArgumentException(""Containing Activity must implement the OnListItemClicked"");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityCreated(Bundle _savedInstanceState) {&#xD;&#xA;            super.onActivityCreated(_savedInstanceState);&#xD;&#xA;            if (_savedInstanceState == null){&#xD;&#xA;                Bundle args = getArguments();&#xD;&#xA;                String myStrings=args.getString(""places"");&#xD;&#xA;                Log.v(""Places"",myStrings);&#xD;&#xA;    &#xD;&#xA;            /*String[] presidents = getResources().getStringArray(R.array.presidents);&#xD;&#xA;            //ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_list_item_1, presidents);&#xD;&#xA;            //PlacesAdapter adapter2 = new PlacesAdapter(this.getActivity(),R.layout.item_place,placeList);&#xD;&#xA;            //setListAdapter(adapter2);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onListItemClick(ListView _l, View _v, int _position, long _id) {&#xD;&#xA;            String president = (String)_l.getItemAtPosition(_position);&#xD;&#xA;            mListener.displayText(president);&#xD;&#xA;            */&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;HTTPManager.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import java.io.BufferedReader;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.io.InputStreamReader;&#xD;&#xA;    import java.net.HttpURLConnection;&#xD;&#xA;    import java.net.URL;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/20/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class HttpManager {&#xD;&#xA;    &#xD;&#xA;        public  static  String getData(String uri){&#xD;&#xA;            BufferedReader reader = null;&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                URL url = new URL(uri);&#xD;&#xA;                HttpURLConnection con = (HttpURLConnection) url.openConnection();&#xD;&#xA;    &#xD;&#xA;                StringBuilder sb = new StringBuilder();&#xD;&#xA;                reader = new BufferedReader(new InputStreamReader(con.getInputStream()));&#xD;&#xA;    &#xD;&#xA;                String line;&#xD;&#xA;                while ((line = reader.readLine()) != null){&#xD;&#xA;                    sb.append(line).append("""");&#xD;&#xA;                }&#xD;&#xA;                return sb.toString();&#xD;&#xA;    &#xD;&#xA;            }catch (Exception e){&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;            }finally {&#xD;&#xA;                if (reader!=null) {&#xD;&#xA;                    try {&#xD;&#xA;                        reader.close();&#xD;&#xA;                    } catch (IOException e) {&#xD;&#xA;                        e.printStackTrace();&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;JSONParser.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import org.json.JSONArray;&#xD;&#xA;    import org.json.JSONException;&#xD;&#xA;    import org.json.JSONObject;&#xD;&#xA;    &#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/20/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class JSONParser {&#xD;&#xA;    &#xD;&#xA;        public static ArrayList<Places> parseFeed(String content) {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            JSONObject myObj;&#xD;&#xA;            try {&#xD;&#xA;                myObj = new JSONObject(content);&#xD;&#xA;                JSONArray result = myObj.getJSONArray(""results"");&#xD;&#xA;                ArrayList<Places> placeList = new ArrayList<>();&#xD;&#xA;    &#xD;&#xA;                for (int i = 0; i < result.length(); i++) {&#xD;&#xA;                    JSONObject obj = result.getJSONObject(i);&#xD;&#xA;                    Places place = new Places();&#xD;&#xA;                    place.setName(obj.getString(""name""));&#xD;&#xA;                    place.setFormatted_address(obj.getString(""formatted_address""));&#xD;&#xA;                    place.setTypes(obj.getString(""types""));&#xD;&#xA;                    //place.setPhotos(obj.getString(""photos""));&#xD;&#xA;    &#xD;&#xA;                    placeList.add(place);&#xD;&#xA;                }&#xD;&#xA;                return placeList;&#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;Places.java&#xD;&#xA;&#xD;&#xA;    import java.io.Serializable;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/22/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class Places implements Serializable {&#xD;&#xA;    &#xD;&#xA;        private String pName;&#xD;&#xA;        private String pTypes;&#xD;&#xA;        private String pFormatted_address;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public Places(){&#xD;&#xA;            pName ="""";&#xD;&#xA;            pTypes ="""";&#xD;&#xA;            pFormatted_address = """";&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public String getName() {&#xD;&#xA;            return pName;&#xD;&#xA;        }&#xD;&#xA;        public void setName(String name) {&#xD;&#xA;            pName = name;&#xD;&#xA;        }&#xD;&#xA;        public String getTypes() {&#xD;&#xA;            return pTypes;&#xD;&#xA;        }&#xD;&#xA;        public void  setTypes(String types) {&#xD;&#xA;            pTypes= types;&#xD;&#xA;        }&#xD;&#xA;        public String getFormatted_address() {&#xD;&#xA;            return pFormatted_address;&#xD;&#xA;        }&#xD;&#xA;        public void setFormatted_address(String formatted_address) {&#xD;&#xA;            pFormatted_address=formatted_address;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Any help is much appreciated &#xD;&#xA;&#xD;&#xA;ALSO was reading this post but to no avail  [LINK](http://stackoverflow.com/questions/11602786/nullpointerexception-in-asynctask-onpostexecute)!";;Added info about post I was reading
76931337;26707385;2844724;5;3187fb8e-921a-41b4-afe7-994b803b2a7a;2014-11-04 13:28:44.0;"I have an app I am trying to pass data through an ASYNC task but am getting a null pointer error in my onPosteExecute method. Seems like no matter how I change my code I still get this same fatal error:&#xD;&#xA;&#xD;&#xA;     10-31 18:43:56.517    1253-1253/com.brianstacks.project1 E/AndroidRuntimeï¹• FATAL EXCEPTION: main&#xD;&#xA;        Process: com.brianstacks.project1, PID: 1253&#xD;&#xA;        java.lang.NullPointerException&#xD;&#xA;                at com.brianstacks.project1.MainActivity$MyTask.onPostExecute(MainActivity.java:277)&#xD;&#xA;                at com.brianstacks.project1.MainActivity$MyTask.onPostExecute(MainActivity.java:247)&#xD;&#xA;                at android.os.AsyncTask.finish(AsyncTask.java:632)&#xD;&#xA;                at android.os.AsyncTask.access$600(AsyncTask.java:177)&#xD;&#xA;                at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:645)&#xD;&#xA;                at android.os.Handler.dispatchMessage(Handler.java:102)&#xD;&#xA;                at android.os.Looper.loop(Looper.java:136)&#xD;&#xA;                at android.app.ActivityThread.main(ActivityThread.java:5001)&#xD;&#xA;                at java.lang.reflect.Method.invokeNative(Native Method)&#xD;&#xA;                at java.lang.reflect.Method.invoke(Method.java:515)&#xD;&#xA;                at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)&#xD;&#xA;                at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)&#xD;&#xA;                at dalvik.system.NativeStart.main(Native Method)&#xD;&#xA;&#xD;&#xA;Here is my code:&#xD;&#xA;&#xD;&#xA;MainActivity.java&#xD;&#xA;&#xD;&#xA;    public class MainActivity extends ListActivity implements MasterFragment.OnListItemClickListener {&#xD;&#xA;    &#xD;&#xA;        final String Tag = ""Project 1 test"";&#xD;&#xA;        EditText myEdit;&#xD;&#xA;        Button myButton;&#xD;&#xA;        ProgressBar pb;&#xD;&#xA;        SerialCustomObject myObject;&#xD;&#xA;        // create a reference to the list's needed for data&#xD;&#xA;        List<MyTask> tasks;&#xD;&#xA;        ArrayList<Places>  placeList;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            if ((savedInstanceState != null)&& (savedInstanceState.getSerializable(""name"") != null)) {&#xD;&#xA;            Places name = (Places) savedInstanceState.getSerializable(""name"");&#xD;&#xA;                Log.v(""name:"",name.getName());&#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            //initiate my tasks&#xD;&#xA;            tasks = new ArrayList<>();&#xD;&#xA;            pb = (ProgressBar)findViewById(R.id.progressBar);&#xD;&#xA;            myEdit = (EditText)findViewById(R.id.myEditText);&#xD;&#xA;            myButton = (Button)findViewById(R.id.myButton);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onCreateOptionsMenu(Menu menu) {&#xD;&#xA;            // Inflate the menu; this adds items to the action bar if it is present.&#xD;&#xA;            getMenuInflater().inflate(R.menu.main, menu);&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onOptionsItemSelected(MenuItem item) {&#xD;&#xA;            // Handle action bar item clicks here. The action bar will&#xD;&#xA;            // automatically handle clicks on the Home/Up button, so long&#xD;&#xA;            // as you specify a parent activity in AndroidManifest.xml.&#xD;&#xA;            int id = item.getItemId();&#xD;&#xA;            return id == R.id.action_settings || super.onOptionsItemSelected(item);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void findAndRemoveFragment() {&#xD;&#xA;            FragmentManager mgr = getFragmentManager();&#xD;&#xA;            DetailFragment frag =&#xD;&#xA;                    (DetailFragment) mgr.findFragmentByTag(DetailFragment.TAG);&#xD;&#xA;    &#xD;&#xA;            if (frag == null) {&#xD;&#xA;                // No fragment found, possibly because the transaction&#xD;&#xA;                // hasn't completed yet.&#xD;&#xA;            } else {&#xD;&#xA;                // Fragment found. You can use it here.&#xD;&#xA;                FragmentTransaction trans = mgr.beginTransaction();&#xD;&#xA;                trans.remove(frag);&#xD;&#xA;                trans.commit();&#xD;&#xA;                // When the main thread runs, the fragment will be&#xD;&#xA;                // removed from the activity.&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void deviceStorage() {&#xD;&#xA;            // Read in a private file&#xD;&#xA;            try {&#xD;&#xA;                FileInputStream fis = this.openFileInput(""some_file.txt"");&#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;            // Create new or open existing private file&#xD;&#xA;            try {&#xD;&#xA;                FileOutputStream fos = this.openFileOutput(""some_other_file.txt"", Context.MODE_PRIVATE);&#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void writeToFile(Context _c, String _filename, String _data) {&#xD;&#xA;            File external = _c.getExternalFilesDir(null);&#xD;&#xA;            File file = new File(external, _filename);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                FileOutputStream fos = new FileOutputStream(file);&#xD;&#xA;                ObjectOutputStream oos = new ObjectOutputStream(fos);&#xD;&#xA;    &#xD;&#xA;                if(myObject == null) {&#xD;&#xA;                    myObject = new SerialCustomObject();&#xD;&#xA;                }&#xD;&#xA;                myObject.setData(_data);&#xD;&#xA;    &#xD;&#xA;                oos.writeObject(myObject);&#xD;&#xA;                oos.close();&#xD;&#xA;                // Write bytes to the stream&#xD;&#xA;                fos.write(_data.getBytes());&#xD;&#xA;    &#xD;&#xA;                // Close the stream to save the file.&#xD;&#xA;                fos.close();&#xD;&#xA;    &#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private String readFromFile(String _filename) {&#xD;&#xA;            File external = getExternalFilesDir(null);&#xD;&#xA;            File file = new File(external, _filename);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                FileInputStream fin = new FileInputStream(file);&#xD;&#xA;                InputStreamReader inReader = new InputStreamReader(fin);&#xD;&#xA;                BufferedReader reader = new BufferedReader(inReader);&#xD;&#xA;    &#xD;&#xA;                // Reading data from our file using the reader&#xD;&#xA;                // and storing it our string buffer.&#xD;&#xA;                StringBuffer buffer = new StringBuffer();&#xD;&#xA;                String text = null;&#xD;&#xA;                // Make sure a line of text is available to be read.&#xD;&#xA;                while((text = reader.readLine()) != null) {&#xD;&#xA;                    buffer.append(text + ""\n"");&#xD;&#xA;                }&#xD;&#xA;                // Close the reader and underlying stream.&#xD;&#xA;                reader.close();&#xD;&#xA;                // Convert the buffer to a string.&#xD;&#xA;                return buffer.toString();&#xD;&#xA;            } catch(IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void displayText(String myText) {&#xD;&#xA;    &#xD;&#xA;            DetailFragment frag = (DetailFragment) getFragmentManager().findFragmentByTag(DetailFragment.TAG);&#xD;&#xA;            if (frag == null){&#xD;&#xA;                frag = DetailFragment.newInstance(myText);&#xD;&#xA;                getFragmentManager().beginTransaction()&#xD;&#xA;                        .replace(R.id.container2,frag,DetailFragment.TAG)&#xD;&#xA;                        .commit();&#xD;&#xA;            }else {&#xD;&#xA;                frag.setDisplayInfo(myText);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        //@Override&#xD;&#xA;        public void onClick(View _v){&#xD;&#xA;    &#xD;&#xA;                myEdit = (EditText)findViewById(R.id.myEditText);&#xD;&#xA;                String newString = myEdit.getText().toString();&#xD;&#xA;                Log.v(Tag,newString);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        // the method for when the button is clicked&#xD;&#xA;        public void myClick(View _v){&#xD;&#xA;            // create a string to grab the text of the edit text&#xD;&#xA;            String myString = myEdit.getText().toString();&#xD;&#xA;            // replace the spaces with + to encode into the url&#xD;&#xA;            String encodedString = myString.replace("" "",""+"");&#xD;&#xA;            //check to see if online and if so continue to get the JSON data if not toast a message telling the user no connection&#xD;&#xA;            if (isOnline()){&#xD;&#xA;                requestData(""https://maps.googleapis.com/maps/api/place/textsearch/json?query=""+encodedString+""&key=AIzaSyB9iOw6wF4FwbOdUTZYiU_MxsbfWM5iMOI"");&#xD;&#xA;            }else Toast.makeText(this, ""Network isn't available"", Toast.LENGTH_SHORT).show();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // method to get the data from ASYNC task&#xD;&#xA;        private void requestData(String uri) {&#xD;&#xA;            MyTask task = new MyTask();&#xD;&#xA;            task.execute(uri);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // method to check internet connectivity&#xD;&#xA;        protected boolean isOnline(){&#xD;&#xA;            ConnectivityManager cm =(ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);&#xD;&#xA;            NetworkInfo netInfo = cm.getActiveNetworkInfo();&#xD;&#xA;            return netInfo != null && netInfo.isConnectedOrConnecting();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        protected void updateDisplay(ArrayList<Places> placeList){&#xD;&#xA;    &#xD;&#xA;            // get instance of the Master List fragment then replaces container1 and commits it to the activity&#xD;&#xA;    &#xD;&#xA;            MasterFragment frag = MasterFragment.newInstance(placeList);&#xD;&#xA;    &#xD;&#xA;            getFragmentManager().beginTransaction()&#xD;&#xA;    &#xD;&#xA;                    .replace(R.id.container1, frag, MasterFragment.TAG).commit();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        // Async task method to do network action in&#xD;&#xA;        private class MyTask extends AsyncTask<String ,String ,String>{&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPreExecute() {&#xD;&#xA;                // add this to the task&#xD;&#xA;                tasks.add(this);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected String doInBackground(String... params) {&#xD;&#xA;                return HttpManager.getData(params[0]);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPostExecute(String result) {&#xD;&#xA;                tasks.remove(this);&#xD;&#xA;                if(null != result && !result.isEmpty()) {&#xD;&#xA;                    placeList = JSONParser.parseFeed(result);&#xD;&#xA;                    updateDisplay(placeList);&#xD;&#xA;                }else {&#xD;&#xA;                    Toast.makeText(MainActivity.this, ""Can't connect to API"", Toast.LENGTH_SHORT).show();&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onProgressUpdate(String... values) {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;DetailFragment.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1.fragments;&#xD;&#xA;    &#xD;&#xA;    import android.app.Fragment;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.view.LayoutInflater;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.ViewGroup;&#xD;&#xA;    import android.widget.TextView;&#xD;&#xA;    &#xD;&#xA;    import com.brianstacks.project1.R;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/27/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class DetailFragment extends Fragment {&#xD;&#xA;    &#xD;&#xA;        public static final String TAG = ""DetailFragment.TAG"";&#xD;&#xA;        public static final String ARG_TAG = ""DetailFragment.TAG"";&#xD;&#xA;    &#xD;&#xA;        public static DetailFragment newInstance(String myString) {&#xD;&#xA;            DetailFragment frag = new DetailFragment();&#xD;&#xA;    &#xD;&#xA;            Bundle args = new Bundle();&#xD;&#xA;            args.putString(ARG_TAG, myString);&#xD;&#xA;            frag.setArguments(args);&#xD;&#xA;    &#xD;&#xA;            return frag;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View onCreateView(LayoutInflater _inflater, ViewGroup _container,&#xD;&#xA;                                 Bundle _savedInstanceState) {&#xD;&#xA;            // Create and return view for this fragment.&#xD;&#xA;            return _inflater.inflate(R.layout.detail_layout, _container, false);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityCreated(Bundle _savedInstanceState) {&#xD;&#xA;            super.onActivityCreated(_savedInstanceState);&#xD;&#xA;    &#xD;&#xA;            Bundle args = getArguments();&#xD;&#xA;            if(args != null && args.containsKey(ARG_TAG)){&#xD;&#xA;                setDisplayInfo(args.getString(ARG_TAG));&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setDisplayInfo(String myText){&#xD;&#xA;            getArguments().putString(ARG_TAG,myText);&#xD;&#xA;            // Get our TextView and set some text to it.&#xD;&#xA;            TextView tv;&#xD;&#xA;            tv = (TextView)getView().findViewById(R.id.detailText);&#xD;&#xA;            tv.setText(myText);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;MasterFragment.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1.fragments;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.app.AlertDialog;&#xD;&#xA;    import android.app.ListFragment;&#xD;&#xA;    import android.content.BroadcastReceiver;&#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.content.DialogInterface;&#xD;&#xA;    import android.content.Intent;&#xD;&#xA;    import android.content.IntentFilter;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.os.Parcelable;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.widget.AdapterView;&#xD;&#xA;    import android.widget.ArrayAdapter;&#xD;&#xA;    import android.widget.ListView;&#xD;&#xA;    &#xD;&#xA;    import com.brianstacks.project1.JSONParser;&#xD;&#xA;    import com.brianstacks.project1.MainActivity;&#xD;&#xA;    import com.brianstacks.project1.Places;&#xD;&#xA;    import com.brianstacks.project1.PlacesAdapter;&#xD;&#xA;    import com.brianstacks.project1.R;&#xD;&#xA;    &#xD;&#xA;    import java.io.Serializable;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/27/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class MasterFragment extends ListFragment{&#xD;&#xA;    &#xD;&#xA;        public static final String TAG = ""MasterFragment.TAG"";&#xD;&#xA;        public static final String KEY = ""places"";&#xD;&#xA;        private OnListItemClickListener mListener;&#xD;&#xA;        private ArrayList<Places> placeList2;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public static MasterFragment newInstance(ArrayList<Places> placeList) {&#xD;&#xA;            MasterFragment masterFragment = new MasterFragment();&#xD;&#xA;    &#xD;&#xA;            Bundle args = new Bundle();&#xD;&#xA;    &#xD;&#xA;            args.putSerializable(""places"", placeList);&#xD;&#xA;    &#xD;&#xA;            masterFragment.setArguments(args);&#xD;&#xA;    &#xD;&#xA;            return masterFragment;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public interface OnListItemClickListener{&#xD;&#xA;            public void displayText(String myText);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void  onAttach(Activity activity){&#xD;&#xA;            super.onAttach(activity);&#xD;&#xA;    &#xD;&#xA;            if (activity instanceof OnListItemClickListener){&#xD;&#xA;                mListener = (OnListItemClickListener) activity;&#xD;&#xA;            }else {&#xD;&#xA;                throw new IllegalArgumentException(""Containing Activity must implement the OnListItemClicked"");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityCreated(Bundle _savedInstanceState) {&#xD;&#xA;            super.onActivityCreated(_savedInstanceState);&#xD;&#xA;            if (_savedInstanceState == null){&#xD;&#xA;                Bundle args = getArguments();&#xD;&#xA;                String myStrings=args.getString(""places"");&#xD;&#xA;                Log.v(""Places"",myStrings);&#xD;&#xA;    &#xD;&#xA;            /*String[] presidents = getResources().getStringArray(R.array.presidents);&#xD;&#xA;            //ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_list_item_1, presidents);&#xD;&#xA;            //PlacesAdapter adapter2 = new PlacesAdapter(this.getActivity(),R.layout.item_place,placeList);&#xD;&#xA;            //setListAdapter(adapter2);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onListItemClick(ListView _l, View _v, int _position, long _id) {&#xD;&#xA;            String president = (String)_l.getItemAtPosition(_position);&#xD;&#xA;            mListener.displayText(president);&#xD;&#xA;            */&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;HTTPManager.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import java.io.BufferedReader;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.io.InputStreamReader;&#xD;&#xA;    import java.net.HttpURLConnection;&#xD;&#xA;    import java.net.URL;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/20/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class HttpManager {&#xD;&#xA;    &#xD;&#xA;        public  static  String getData(String uri){&#xD;&#xA;            BufferedReader reader = null;&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                URL url = new URL(uri);&#xD;&#xA;                HttpURLConnection con = (HttpURLConnection) url.openConnection();&#xD;&#xA;    &#xD;&#xA;                StringBuilder sb = new StringBuilder();&#xD;&#xA;                reader = new BufferedReader(new InputStreamReader(con.getInputStream()));&#xD;&#xA;    &#xD;&#xA;                String line;&#xD;&#xA;                while ((line = reader.readLine()) != null){&#xD;&#xA;                    sb.append(line).append("""");&#xD;&#xA;                }&#xD;&#xA;                return sb.toString();&#xD;&#xA;    &#xD;&#xA;            }catch (Exception e){&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;            }finally {&#xD;&#xA;                if (reader!=null) {&#xD;&#xA;                    try {&#xD;&#xA;                        reader.close();&#xD;&#xA;                    } catch (IOException e) {&#xD;&#xA;                        e.printStackTrace();&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;JSONParser.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import org.json.JSONArray;&#xD;&#xA;    import org.json.JSONException;&#xD;&#xA;    import org.json.JSONObject;&#xD;&#xA;    &#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/20/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class JSONParser {&#xD;&#xA;    &#xD;&#xA;        public static ArrayList<Places> parseFeed(String content) {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            JSONObject myObj;&#xD;&#xA;            try {&#xD;&#xA;                myObj = new JSONObject(content);&#xD;&#xA;                JSONArray result = myObj.getJSONArray(""results"");&#xD;&#xA;                ArrayList<Places> placeList = new ArrayList<>();&#xD;&#xA;    &#xD;&#xA;                for (int i = 0; i < result.length(); i++) {&#xD;&#xA;                    JSONObject obj = result.getJSONObject(i);&#xD;&#xA;                    Places place = new Places();&#xD;&#xA;                    place.setName(obj.getString(""name""));&#xD;&#xA;                    place.setFormatted_address(obj.getString(""formatted_address""));&#xD;&#xA;                    place.setTypes(obj.getString(""types""));&#xD;&#xA;                    //place.setPhotos(obj.getString(""photos""));&#xD;&#xA;    &#xD;&#xA;                    placeList.add(place);&#xD;&#xA;                }&#xD;&#xA;                return placeList;&#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;Places.java&#xD;&#xA;&#xD;&#xA;    import java.io.Serializable;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/22/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class Places implements Serializable {&#xD;&#xA;    &#xD;&#xA;        private String pName;&#xD;&#xA;        private String pTypes;&#xD;&#xA;        private String pFormatted_address;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public Places(){&#xD;&#xA;            pName ="""";&#xD;&#xA;            pTypes ="""";&#xD;&#xA;            pFormatted_address = """";&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public String getName() {&#xD;&#xA;            return pName;&#xD;&#xA;        }&#xD;&#xA;        public void setName(String name) {&#xD;&#xA;            pName = name;&#xD;&#xA;        }&#xD;&#xA;        public String getTypes() {&#xD;&#xA;            return pTypes;&#xD;&#xA;        }&#xD;&#xA;        public void  setTypes(String types) {&#xD;&#xA;            pTypes= types;&#xD;&#xA;        }&#xD;&#xA;        public String getFormatted_address() {&#xD;&#xA;            return pFormatted_address;&#xD;&#xA;        }&#xD;&#xA;        public void setFormatted_address(String formatted_address) {&#xD;&#xA;            pFormatted_address=formatted_address;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Any help is much appreciated &#xD;&#xA;&#xD;&#xA;ALSO was reading this post but to no avail  [LINK](http://stackoverflow.com/questions/11602786/nullpointerexception-in-asynctask-onpostexecute)!&#xD;&#xA;&#xD;&#xA;**EDIT Problem Fixed**&#xD;&#xA;&#xD;&#xA;My problem was in my MasterFragment on this line of code&#xD;&#xA;&#xD;&#xA;    Bundle args = getArguments();&#xD;&#xA;                String myStrings=args.getString(""places"");&#xD;&#xA;                Log.v(""Places"",myStrings);&#xD;&#xA;the String myStrings was an ArrayList<Places> that I was casting to a String for some strange reason that was giving me the fatal errors the correction of this is &#xD;&#xA;&#xD;&#xA;    Bundle args = getArguments();&#xD;&#xA;            ArrayList myStrings = args.getParcelableArrayList(""places"");&#xD;&#xA;&#xD;&#xA;Thanks to all that commented, it made me think and research.";;Fixed the problem
76932502;26707385;1043380;8;07f7d79a-81ad-4c05-a348-7f7422b1ae24;2014-11-04 13:44:56.0;"I have an app I am trying to pass data through an ASYNC task but am getting a null pointer error in my onPosteExecute method. Seems like no matter how I change my code I still get this same fatal error:&#xD;&#xA;&#xD;&#xA;     10-31 18:43:56.517    1253-1253/com.brianstacks.project1 E/AndroidRuntimeï¹• FATAL EXCEPTION: main&#xD;&#xA;        Process: com.brianstacks.project1, PID: 1253&#xD;&#xA;        java.lang.NullPointerException&#xD;&#xA;                at com.brianstacks.project1.MainActivity$MyTask.onPostExecute(MainActivity.java:277)&#xD;&#xA;                at com.brianstacks.project1.MainActivity$MyTask.onPostExecute(MainActivity.java:247)&#xD;&#xA;                at android.os.AsyncTask.finish(AsyncTask.java:632)&#xD;&#xA;                at android.os.AsyncTask.access$600(AsyncTask.java:177)&#xD;&#xA;                at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:645)&#xD;&#xA;                at android.os.Handler.dispatchMessage(Handler.java:102)&#xD;&#xA;                at android.os.Looper.loop(Looper.java:136)&#xD;&#xA;                at android.app.ActivityThread.main(ActivityThread.java:5001)&#xD;&#xA;                at java.lang.reflect.Method.invokeNative(Native Method)&#xD;&#xA;                at java.lang.reflect.Method.invoke(Method.java:515)&#xD;&#xA;                at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)&#xD;&#xA;                at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)&#xD;&#xA;                at dalvik.system.NativeStart.main(Native Method)&#xD;&#xA;&#xD;&#xA;Here is my code:&#xD;&#xA;&#xD;&#xA;MainActivity.java&#xD;&#xA;&#xD;&#xA;    public class MainActivity extends ListActivity implements MasterFragment.OnListItemClickListener {&#xD;&#xA;    &#xD;&#xA;        final String Tag = ""Project 1 test"";&#xD;&#xA;        EditText myEdit;&#xD;&#xA;        Button myButton;&#xD;&#xA;        ProgressBar pb;&#xD;&#xA;        SerialCustomObject myObject;&#xD;&#xA;        // create a reference to the list's needed for data&#xD;&#xA;        List<MyTask> tasks;&#xD;&#xA;        ArrayList<Places>  placeList;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            if ((savedInstanceState != null)&& (savedInstanceState.getSerializable(""name"") != null)) {&#xD;&#xA;            Places name = (Places) savedInstanceState.getSerializable(""name"");&#xD;&#xA;                Log.v(""name:"",name.getName());&#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            //initiate my tasks&#xD;&#xA;            tasks = new ArrayList<>();&#xD;&#xA;            pb = (ProgressBar)findViewById(R.id.progressBar);&#xD;&#xA;            myEdit = (EditText)findViewById(R.id.myEditText);&#xD;&#xA;            myButton = (Button)findViewById(R.id.myButton);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onCreateOptionsMenu(Menu menu) {&#xD;&#xA;            // Inflate the menu; this adds items to the action bar if it is present.&#xD;&#xA;            getMenuInflater().inflate(R.menu.main, menu);&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onOptionsItemSelected(MenuItem item) {&#xD;&#xA;            // Handle action bar item clicks here. The action bar will&#xD;&#xA;            // automatically handle clicks on the Home/Up button, so long&#xD;&#xA;            // as you specify a parent activity in AndroidManifest.xml.&#xD;&#xA;            int id = item.getItemId();&#xD;&#xA;            return id == R.id.action_settings || super.onOptionsItemSelected(item);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void findAndRemoveFragment() {&#xD;&#xA;            FragmentManager mgr = getFragmentManager();&#xD;&#xA;            DetailFragment frag =&#xD;&#xA;                    (DetailFragment) mgr.findFragmentByTag(DetailFragment.TAG);&#xD;&#xA;    &#xD;&#xA;            if (frag == null) {&#xD;&#xA;                // No fragment found, possibly because the transaction&#xD;&#xA;                // hasn't completed yet.&#xD;&#xA;            } else {&#xD;&#xA;                // Fragment found. You can use it here.&#xD;&#xA;                FragmentTransaction trans = mgr.beginTransaction();&#xD;&#xA;                trans.remove(frag);&#xD;&#xA;                trans.commit();&#xD;&#xA;                // When the main thread runs, the fragment will be&#xD;&#xA;                // removed from the activity.&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void deviceStorage() {&#xD;&#xA;            // Read in a private file&#xD;&#xA;            try {&#xD;&#xA;                FileInputStream fis = this.openFileInput(""some_file.txt"");&#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;            // Create new or open existing private file&#xD;&#xA;            try {&#xD;&#xA;                FileOutputStream fos = this.openFileOutput(""some_other_file.txt"", Context.MODE_PRIVATE);&#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void writeToFile(Context _c, String _filename, String _data) {&#xD;&#xA;            File external = _c.getExternalFilesDir(null);&#xD;&#xA;            File file = new File(external, _filename);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                FileOutputStream fos = new FileOutputStream(file);&#xD;&#xA;                ObjectOutputStream oos = new ObjectOutputStream(fos);&#xD;&#xA;    &#xD;&#xA;                if(myObject == null) {&#xD;&#xA;                    myObject = new SerialCustomObject();&#xD;&#xA;                }&#xD;&#xA;                myObject.setData(_data);&#xD;&#xA;    &#xD;&#xA;                oos.writeObject(myObject);&#xD;&#xA;                oos.close();&#xD;&#xA;                // Write bytes to the stream&#xD;&#xA;                fos.write(_data.getBytes());&#xD;&#xA;    &#xD;&#xA;                // Close the stream to save the file.&#xD;&#xA;                fos.close();&#xD;&#xA;    &#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private String readFromFile(String _filename) {&#xD;&#xA;            File external = getExternalFilesDir(null);&#xD;&#xA;            File file = new File(external, _filename);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                FileInputStream fin = new FileInputStream(file);&#xD;&#xA;                InputStreamReader inReader = new InputStreamReader(fin);&#xD;&#xA;                BufferedReader reader = new BufferedReader(inReader);&#xD;&#xA;    &#xD;&#xA;                // Reading data from our file using the reader&#xD;&#xA;                // and storing it our string buffer.&#xD;&#xA;                StringBuffer buffer = new StringBuffer();&#xD;&#xA;                String text = null;&#xD;&#xA;                // Make sure a line of text is available to be read.&#xD;&#xA;                while((text = reader.readLine()) != null) {&#xD;&#xA;                    buffer.append(text + ""\n"");&#xD;&#xA;                }&#xD;&#xA;                // Close the reader and underlying stream.&#xD;&#xA;                reader.close();&#xD;&#xA;                // Convert the buffer to a string.&#xD;&#xA;                return buffer.toString();&#xD;&#xA;            } catch(IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void displayText(String myText) {&#xD;&#xA;    &#xD;&#xA;            DetailFragment frag = (DetailFragment) getFragmentManager().findFragmentByTag(DetailFragment.TAG);&#xD;&#xA;            if (frag == null){&#xD;&#xA;                frag = DetailFragment.newInstance(myText);&#xD;&#xA;                getFragmentManager().beginTransaction()&#xD;&#xA;                        .replace(R.id.container2,frag,DetailFragment.TAG)&#xD;&#xA;                        .commit();&#xD;&#xA;            }else {&#xD;&#xA;                frag.setDisplayInfo(myText);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        //@Override&#xD;&#xA;        public void onClick(View _v){&#xD;&#xA;    &#xD;&#xA;                myEdit = (EditText)findViewById(R.id.myEditText);&#xD;&#xA;                String newString = myEdit.getText().toString();&#xD;&#xA;                Log.v(Tag,newString);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        // the method for when the button is clicked&#xD;&#xA;        public void myClick(View _v){&#xD;&#xA;            // create a string to grab the text of the edit text&#xD;&#xA;            String myString = myEdit.getText().toString();&#xD;&#xA;            // replace the spaces with + to encode into the url&#xD;&#xA;            String encodedString = myString.replace("" "",""+"");&#xD;&#xA;            //check to see if online and if so continue to get the JSON data if not toast a message telling the user no connection&#xD;&#xA;            if (isOnline()){&#xD;&#xA;                requestData(""https://maps.googleapis.com/maps/api/place/textsearch/json?query=""+encodedString+""&key=AIzaSyB9iOw6wF4FwbOdUTZYiU_MxsbfWM5iMOI"");&#xD;&#xA;            }else Toast.makeText(this, ""Network isn't available"", Toast.LENGTH_SHORT).show();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // method to get the data from ASYNC task&#xD;&#xA;        private void requestData(String uri) {&#xD;&#xA;            MyTask task = new MyTask();&#xD;&#xA;            task.execute(uri);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // method to check internet connectivity&#xD;&#xA;        protected boolean isOnline(){&#xD;&#xA;            ConnectivityManager cm =(ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);&#xD;&#xA;            NetworkInfo netInfo = cm.getActiveNetworkInfo();&#xD;&#xA;            return netInfo != null && netInfo.isConnectedOrConnecting();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        protected void updateDisplay(ArrayList<Places> placeList){&#xD;&#xA;    &#xD;&#xA;            // get instance of the Master List fragment then replaces container1 and commits it to the activity&#xD;&#xA;    &#xD;&#xA;            MasterFragment frag = MasterFragment.newInstance(placeList);&#xD;&#xA;    &#xD;&#xA;            getFragmentManager().beginTransaction()&#xD;&#xA;    &#xD;&#xA;                    .replace(R.id.container1, frag, MasterFragment.TAG).commit();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        // Async task method to do network action in&#xD;&#xA;        private class MyTask extends AsyncTask<String ,String ,String>{&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPreExecute() {&#xD;&#xA;                // add this to the task&#xD;&#xA;                tasks.add(this);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected String doInBackground(String... params) {&#xD;&#xA;                return HttpManager.getData(params[0]);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPostExecute(String result) {&#xD;&#xA;                tasks.remove(this);&#xD;&#xA;                if(null != result && !result.isEmpty()) {&#xD;&#xA;                    placeList = JSONParser.parseFeed(result);&#xD;&#xA;                    updateDisplay(placeList);&#xD;&#xA;                }else {&#xD;&#xA;                    Toast.makeText(MainActivity.this, ""Can't connect to API"", Toast.LENGTH_SHORT).show();&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onProgressUpdate(String... values) {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;DetailFragment.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1.fragments;&#xD;&#xA;    &#xD;&#xA;    import android.app.Fragment;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.view.LayoutInflater;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.ViewGroup;&#xD;&#xA;    import android.widget.TextView;&#xD;&#xA;    &#xD;&#xA;    import com.brianstacks.project1.R;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/27/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class DetailFragment extends Fragment {&#xD;&#xA;    &#xD;&#xA;        public static final String TAG = ""DetailFragment.TAG"";&#xD;&#xA;        public static final String ARG_TAG = ""DetailFragment.TAG"";&#xD;&#xA;    &#xD;&#xA;        public static DetailFragment newInstance(String myString) {&#xD;&#xA;            DetailFragment frag = new DetailFragment();&#xD;&#xA;    &#xD;&#xA;            Bundle args = new Bundle();&#xD;&#xA;            args.putString(ARG_TAG, myString);&#xD;&#xA;            frag.setArguments(args);&#xD;&#xA;    &#xD;&#xA;            return frag;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View onCreateView(LayoutInflater _inflater, ViewGroup _container,&#xD;&#xA;                                 Bundle _savedInstanceState) {&#xD;&#xA;            // Create and return view for this fragment.&#xD;&#xA;            return _inflater.inflate(R.layout.detail_layout, _container, false);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityCreated(Bundle _savedInstanceState) {&#xD;&#xA;            super.onActivityCreated(_savedInstanceState);&#xD;&#xA;    &#xD;&#xA;            Bundle args = getArguments();&#xD;&#xA;            if(args != null && args.containsKey(ARG_TAG)){&#xD;&#xA;                setDisplayInfo(args.getString(ARG_TAG));&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setDisplayInfo(String myText){&#xD;&#xA;            getArguments().putString(ARG_TAG,myText);&#xD;&#xA;            // Get our TextView and set some text to it.&#xD;&#xA;            TextView tv;&#xD;&#xA;            tv = (TextView)getView().findViewById(R.id.detailText);&#xD;&#xA;            tv.setText(myText);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;MasterFragment.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1.fragments;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.app.AlertDialog;&#xD;&#xA;    import android.app.ListFragment;&#xD;&#xA;    import android.content.BroadcastReceiver;&#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.content.DialogInterface;&#xD;&#xA;    import android.content.Intent;&#xD;&#xA;    import android.content.IntentFilter;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.os.Parcelable;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.widget.AdapterView;&#xD;&#xA;    import android.widget.ArrayAdapter;&#xD;&#xA;    import android.widget.ListView;&#xD;&#xA;    &#xD;&#xA;    import com.brianstacks.project1.JSONParser;&#xD;&#xA;    import com.brianstacks.project1.MainActivity;&#xD;&#xA;    import com.brianstacks.project1.Places;&#xD;&#xA;    import com.brianstacks.project1.PlacesAdapter;&#xD;&#xA;    import com.brianstacks.project1.R;&#xD;&#xA;    &#xD;&#xA;    import java.io.Serializable;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/27/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class MasterFragment extends ListFragment{&#xD;&#xA;    &#xD;&#xA;        public static final String TAG = ""MasterFragment.TAG"";&#xD;&#xA;        public static final String KEY = ""places"";&#xD;&#xA;        private OnListItemClickListener mListener;&#xD;&#xA;        private ArrayList<Places> placeList2;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public static MasterFragment newInstance(ArrayList<Places> placeList) {&#xD;&#xA;            MasterFragment masterFragment = new MasterFragment();&#xD;&#xA;    &#xD;&#xA;            Bundle args = new Bundle();&#xD;&#xA;    &#xD;&#xA;            args.putSerializable(""places"", placeList);&#xD;&#xA;    &#xD;&#xA;            masterFragment.setArguments(args);&#xD;&#xA;    &#xD;&#xA;            return masterFragment;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public interface OnListItemClickListener{&#xD;&#xA;            public void displayText(String myText);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void  onAttach(Activity activity){&#xD;&#xA;            super.onAttach(activity);&#xD;&#xA;    &#xD;&#xA;            if (activity instanceof OnListItemClickListener){&#xD;&#xA;                mListener = (OnListItemClickListener) activity;&#xD;&#xA;            }else {&#xD;&#xA;                throw new IllegalArgumentException(""Containing Activity must implement the OnListItemClicked"");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityCreated(Bundle _savedInstanceState) {&#xD;&#xA;            super.onActivityCreated(_savedInstanceState);&#xD;&#xA;            if (_savedInstanceState == null){&#xD;&#xA;                Bundle args = getArguments();&#xD;&#xA;                String myStrings=args.getString(""places"");&#xD;&#xA;                Log.v(""Places"",myStrings);&#xD;&#xA;    &#xD;&#xA;            /*String[] presidents = getResources().getStringArray(R.array.presidents);&#xD;&#xA;            //ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_list_item_1, presidents);&#xD;&#xA;            //PlacesAdapter adapter2 = new PlacesAdapter(this.getActivity(),R.layout.item_place,placeList);&#xD;&#xA;            //setListAdapter(adapter2);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onListItemClick(ListView _l, View _v, int _position, long _id) {&#xD;&#xA;            String president = (String)_l.getItemAtPosition(_position);&#xD;&#xA;            mListener.displayText(president);&#xD;&#xA;            */&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;HTTPManager.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import java.io.BufferedReader;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.io.InputStreamReader;&#xD;&#xA;    import java.net.HttpURLConnection;&#xD;&#xA;    import java.net.URL;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/20/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class HttpManager {&#xD;&#xA;    &#xD;&#xA;        public  static  String getData(String uri){&#xD;&#xA;            BufferedReader reader = null;&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                URL url = new URL(uri);&#xD;&#xA;                HttpURLConnection con = (HttpURLConnection) url.openConnection();&#xD;&#xA;    &#xD;&#xA;                StringBuilder sb = new StringBuilder();&#xD;&#xA;                reader = new BufferedReader(new InputStreamReader(con.getInputStream()));&#xD;&#xA;    &#xD;&#xA;                String line;&#xD;&#xA;                while ((line = reader.readLine()) != null){&#xD;&#xA;                    sb.append(line).append("""");&#xD;&#xA;                }&#xD;&#xA;                return sb.toString();&#xD;&#xA;    &#xD;&#xA;            }catch (Exception e){&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;            }finally {&#xD;&#xA;                if (reader!=null) {&#xD;&#xA;                    try {&#xD;&#xA;                        reader.close();&#xD;&#xA;                    } catch (IOException e) {&#xD;&#xA;                        e.printStackTrace();&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;JSONParser.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import org.json.JSONArray;&#xD;&#xA;    import org.json.JSONException;&#xD;&#xA;    import org.json.JSONObject;&#xD;&#xA;    &#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/20/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class JSONParser {&#xD;&#xA;    &#xD;&#xA;        public static ArrayList<Places> parseFeed(String content) {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            JSONObject myObj;&#xD;&#xA;            try {&#xD;&#xA;                myObj = new JSONObject(content);&#xD;&#xA;                JSONArray result = myObj.getJSONArray(""results"");&#xD;&#xA;                ArrayList<Places> placeList = new ArrayList<>();&#xD;&#xA;    &#xD;&#xA;                for (int i = 0; i < result.length(); i++) {&#xD;&#xA;                    JSONObject obj = result.getJSONObject(i);&#xD;&#xA;                    Places place = new Places();&#xD;&#xA;                    place.setName(obj.getString(""name""));&#xD;&#xA;                    place.setFormatted_address(obj.getString(""formatted_address""));&#xD;&#xA;                    place.setTypes(obj.getString(""types""));&#xD;&#xA;                    //place.setPhotos(obj.getString(""photos""));&#xD;&#xA;    &#xD;&#xA;                    placeList.add(place);&#xD;&#xA;                }&#xD;&#xA;                return placeList;&#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;Places.java&#xD;&#xA;&#xD;&#xA;    import java.io.Serializable;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/22/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class Places implements Serializable {&#xD;&#xA;    &#xD;&#xA;        private String pName;&#xD;&#xA;        private String pTypes;&#xD;&#xA;        private String pFormatted_address;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public Places(){&#xD;&#xA;            pName ="""";&#xD;&#xA;            pTypes ="""";&#xD;&#xA;            pFormatted_address = """";&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public String getName() {&#xD;&#xA;            return pName;&#xD;&#xA;        }&#xD;&#xA;        public void setName(String name) {&#xD;&#xA;            pName = name;&#xD;&#xA;        }&#xD;&#xA;        public String getTypes() {&#xD;&#xA;            return pTypes;&#xD;&#xA;        }&#xD;&#xA;        public void  setTypes(String types) {&#xD;&#xA;            pTypes= types;&#xD;&#xA;        }&#xD;&#xA;        public String getFormatted_address() {&#xD;&#xA;            return pFormatted_address;&#xD;&#xA;        }&#xD;&#xA;        public void setFormatted_address(String formatted_address) {&#xD;&#xA;            pFormatted_address=formatted_address;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Any help is much appreciated &#xD;&#xA;&#xD;&#xA;ALSO was reading this post but to no avail  [LINK](http://stackoverflow.com/questions/11602786/nullpointerexception-in-asynctask-onpostexecute)!";;Rollback to [551a5654-b2e7-4781-8f6d-200733234a62]
146726816;26707385;-1;5;2803b5ab-a848-4564-b151-621e35f6a92a;2017-05-23 11:57:46.0;"I have an app I am trying to pass data through an ASYNC task but am getting a null pointer error in my onPosteExecute method. Seems like no matter how I change my code I still get this same fatal error:&#xD;&#xA;&#xD;&#xA;     10-31 18:43:56.517    1253-1253/com.brianstacks.project1 E/AndroidRuntimeï¹• FATAL EXCEPTION: main&#xD;&#xA;        Process: com.brianstacks.project1, PID: 1253&#xD;&#xA;        java.lang.NullPointerException&#xD;&#xA;                at com.brianstacks.project1.MainActivity$MyTask.onPostExecute(MainActivity.java:277)&#xD;&#xA;                at com.brianstacks.project1.MainActivity$MyTask.onPostExecute(MainActivity.java:247)&#xD;&#xA;                at android.os.AsyncTask.finish(AsyncTask.java:632)&#xD;&#xA;                at android.os.AsyncTask.access$600(AsyncTask.java:177)&#xD;&#xA;                at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:645)&#xD;&#xA;                at android.os.Handler.dispatchMessage(Handler.java:102)&#xD;&#xA;                at android.os.Looper.loop(Looper.java:136)&#xD;&#xA;                at android.app.ActivityThread.main(ActivityThread.java:5001)&#xD;&#xA;                at java.lang.reflect.Method.invokeNative(Native Method)&#xD;&#xA;                at java.lang.reflect.Method.invoke(Method.java:515)&#xD;&#xA;                at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)&#xD;&#xA;                at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)&#xD;&#xA;                at dalvik.system.NativeStart.main(Native Method)&#xD;&#xA;&#xD;&#xA;Here is my code:&#xD;&#xA;&#xD;&#xA;MainActivity.java&#xD;&#xA;&#xD;&#xA;    public class MainActivity extends ListActivity implements MasterFragment.OnListItemClickListener {&#xD;&#xA;    &#xD;&#xA;        final String Tag = ""Project 1 test"";&#xD;&#xA;        EditText myEdit;&#xD;&#xA;        Button myButton;&#xD;&#xA;        ProgressBar pb;&#xD;&#xA;        SerialCustomObject myObject;&#xD;&#xA;        // create a reference to the list's needed for data&#xD;&#xA;        List<MyTask> tasks;&#xD;&#xA;        ArrayList<Places>  placeList;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            if ((savedInstanceState != null)&& (savedInstanceState.getSerializable(""name"") != null)) {&#xD;&#xA;            Places name = (Places) savedInstanceState.getSerializable(""name"");&#xD;&#xA;                Log.v(""name:"",name.getName());&#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            //initiate my tasks&#xD;&#xA;            tasks = new ArrayList<>();&#xD;&#xA;            pb = (ProgressBar)findViewById(R.id.progressBar);&#xD;&#xA;            myEdit = (EditText)findViewById(R.id.myEditText);&#xD;&#xA;            myButton = (Button)findViewById(R.id.myButton);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onCreateOptionsMenu(Menu menu) {&#xD;&#xA;            // Inflate the menu; this adds items to the action bar if it is present.&#xD;&#xA;            getMenuInflater().inflate(R.menu.main, menu);&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onOptionsItemSelected(MenuItem item) {&#xD;&#xA;            // Handle action bar item clicks here. The action bar will&#xD;&#xA;            // automatically handle clicks on the Home/Up button, so long&#xD;&#xA;            // as you specify a parent activity in AndroidManifest.xml.&#xD;&#xA;            int id = item.getItemId();&#xD;&#xA;            return id == R.id.action_settings || super.onOptionsItemSelected(item);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void findAndRemoveFragment() {&#xD;&#xA;            FragmentManager mgr = getFragmentManager();&#xD;&#xA;            DetailFragment frag =&#xD;&#xA;                    (DetailFragment) mgr.findFragmentByTag(DetailFragment.TAG);&#xD;&#xA;    &#xD;&#xA;            if (frag == null) {&#xD;&#xA;                // No fragment found, possibly because the transaction&#xD;&#xA;                // hasn't completed yet.&#xD;&#xA;            } else {&#xD;&#xA;                // Fragment found. You can use it here.&#xD;&#xA;                FragmentTransaction trans = mgr.beginTransaction();&#xD;&#xA;                trans.remove(frag);&#xD;&#xA;                trans.commit();&#xD;&#xA;                // When the main thread runs, the fragment will be&#xD;&#xA;                // removed from the activity.&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void deviceStorage() {&#xD;&#xA;            // Read in a private file&#xD;&#xA;            try {&#xD;&#xA;                FileInputStream fis = this.openFileInput(""some_file.txt"");&#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;            // Create new or open existing private file&#xD;&#xA;            try {&#xD;&#xA;                FileOutputStream fos = this.openFileOutput(""some_other_file.txt"", Context.MODE_PRIVATE);&#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void writeToFile(Context _c, String _filename, String _data) {&#xD;&#xA;            File external = _c.getExternalFilesDir(null);&#xD;&#xA;            File file = new File(external, _filename);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                FileOutputStream fos = new FileOutputStream(file);&#xD;&#xA;                ObjectOutputStream oos = new ObjectOutputStream(fos);&#xD;&#xA;    &#xD;&#xA;                if(myObject == null) {&#xD;&#xA;                    myObject = new SerialCustomObject();&#xD;&#xA;                }&#xD;&#xA;                myObject.setData(_data);&#xD;&#xA;    &#xD;&#xA;                oos.writeObject(myObject);&#xD;&#xA;                oos.close();&#xD;&#xA;                // Write bytes to the stream&#xD;&#xA;                fos.write(_data.getBytes());&#xD;&#xA;    &#xD;&#xA;                // Close the stream to save the file.&#xD;&#xA;                fos.close();&#xD;&#xA;    &#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private String readFromFile(String _filename) {&#xD;&#xA;            File external = getExternalFilesDir(null);&#xD;&#xA;            File file = new File(external, _filename);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                FileInputStream fin = new FileInputStream(file);&#xD;&#xA;                InputStreamReader inReader = new InputStreamReader(fin);&#xD;&#xA;                BufferedReader reader = new BufferedReader(inReader);&#xD;&#xA;    &#xD;&#xA;                // Reading data from our file using the reader&#xD;&#xA;                // and storing it our string buffer.&#xD;&#xA;                StringBuffer buffer = new StringBuffer();&#xD;&#xA;                String text = null;&#xD;&#xA;                // Make sure a line of text is available to be read.&#xD;&#xA;                while((text = reader.readLine()) != null) {&#xD;&#xA;                    buffer.append(text + ""\n"");&#xD;&#xA;                }&#xD;&#xA;                // Close the reader and underlying stream.&#xD;&#xA;                reader.close();&#xD;&#xA;                // Convert the buffer to a string.&#xD;&#xA;                return buffer.toString();&#xD;&#xA;            } catch(IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void displayText(String myText) {&#xD;&#xA;    &#xD;&#xA;            DetailFragment frag = (DetailFragment) getFragmentManager().findFragmentByTag(DetailFragment.TAG);&#xD;&#xA;            if (frag == null){&#xD;&#xA;                frag = DetailFragment.newInstance(myText);&#xD;&#xA;                getFragmentManager().beginTransaction()&#xD;&#xA;                        .replace(R.id.container2,frag,DetailFragment.TAG)&#xD;&#xA;                        .commit();&#xD;&#xA;            }else {&#xD;&#xA;                frag.setDisplayInfo(myText);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        //@Override&#xD;&#xA;        public void onClick(View _v){&#xD;&#xA;    &#xD;&#xA;                myEdit = (EditText)findViewById(R.id.myEditText);&#xD;&#xA;                String newString = myEdit.getText().toString();&#xD;&#xA;                Log.v(Tag,newString);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        // the method for when the button is clicked&#xD;&#xA;        public void myClick(View _v){&#xD;&#xA;            // create a string to grab the text of the edit text&#xD;&#xA;            String myString = myEdit.getText().toString();&#xD;&#xA;            // replace the spaces with + to encode into the url&#xD;&#xA;            String encodedString = myString.replace("" "",""+"");&#xD;&#xA;            //check to see if online and if so continue to get the JSON data if not toast a message telling the user no connection&#xD;&#xA;            if (isOnline()){&#xD;&#xA;                requestData(""https://maps.googleapis.com/maps/api/place/textsearch/json?query=""+encodedString+""&key=AIzaSyB9iOw6wF4FwbOdUTZYiU_MxsbfWM5iMOI"");&#xD;&#xA;            }else Toast.makeText(this, ""Network isn't available"", Toast.LENGTH_SHORT).show();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // method to get the data from ASYNC task&#xD;&#xA;        private void requestData(String uri) {&#xD;&#xA;            MyTask task = new MyTask();&#xD;&#xA;            task.execute(uri);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // method to check internet connectivity&#xD;&#xA;        protected boolean isOnline(){&#xD;&#xA;            ConnectivityManager cm =(ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);&#xD;&#xA;            NetworkInfo netInfo = cm.getActiveNetworkInfo();&#xD;&#xA;            return netInfo != null && netInfo.isConnectedOrConnecting();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        protected void updateDisplay(ArrayList<Places> placeList){&#xD;&#xA;    &#xD;&#xA;            // get instance of the Master List fragment then replaces container1 and commits it to the activity&#xD;&#xA;    &#xD;&#xA;            MasterFragment frag = MasterFragment.newInstance(placeList);&#xD;&#xA;    &#xD;&#xA;            getFragmentManager().beginTransaction()&#xD;&#xA;    &#xD;&#xA;                    .replace(R.id.container1, frag, MasterFragment.TAG).commit();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        // Async task method to do network action in&#xD;&#xA;        private class MyTask extends AsyncTask<String ,String ,String>{&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPreExecute() {&#xD;&#xA;                // add this to the task&#xD;&#xA;                tasks.add(this);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected String doInBackground(String... params) {&#xD;&#xA;                return HttpManager.getData(params[0]);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPostExecute(String result) {&#xD;&#xA;                tasks.remove(this);&#xD;&#xA;                if(null != result && !result.isEmpty()) {&#xD;&#xA;                    placeList = JSONParser.parseFeed(result);&#xD;&#xA;                    updateDisplay(placeList);&#xD;&#xA;                }else {&#xD;&#xA;                    Toast.makeText(MainActivity.this, ""Can't connect to API"", Toast.LENGTH_SHORT).show();&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onProgressUpdate(String... values) {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;DetailFragment.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1.fragments;&#xD;&#xA;    &#xD;&#xA;    import android.app.Fragment;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.view.LayoutInflater;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.ViewGroup;&#xD;&#xA;    import android.widget.TextView;&#xD;&#xA;    &#xD;&#xA;    import com.brianstacks.project1.R;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/27/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class DetailFragment extends Fragment {&#xD;&#xA;    &#xD;&#xA;        public static final String TAG = ""DetailFragment.TAG"";&#xD;&#xA;        public static final String ARG_TAG = ""DetailFragment.TAG"";&#xD;&#xA;    &#xD;&#xA;        public static DetailFragment newInstance(String myString) {&#xD;&#xA;            DetailFragment frag = new DetailFragment();&#xD;&#xA;    &#xD;&#xA;            Bundle args = new Bundle();&#xD;&#xA;            args.putString(ARG_TAG, myString);&#xD;&#xA;            frag.setArguments(args);&#xD;&#xA;    &#xD;&#xA;            return frag;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View onCreateView(LayoutInflater _inflater, ViewGroup _container,&#xD;&#xA;                                 Bundle _savedInstanceState) {&#xD;&#xA;            // Create and return view for this fragment.&#xD;&#xA;            return _inflater.inflate(R.layout.detail_layout, _container, false);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityCreated(Bundle _savedInstanceState) {&#xD;&#xA;            super.onActivityCreated(_savedInstanceState);&#xD;&#xA;    &#xD;&#xA;            Bundle args = getArguments();&#xD;&#xA;            if(args != null && args.containsKey(ARG_TAG)){&#xD;&#xA;                setDisplayInfo(args.getString(ARG_TAG));&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setDisplayInfo(String myText){&#xD;&#xA;            getArguments().putString(ARG_TAG,myText);&#xD;&#xA;            // Get our TextView and set some text to it.&#xD;&#xA;            TextView tv;&#xD;&#xA;            tv = (TextView)getView().findViewById(R.id.detailText);&#xD;&#xA;            tv.setText(myText);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;MasterFragment.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1.fragments;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.app.AlertDialog;&#xD;&#xA;    import android.app.ListFragment;&#xD;&#xA;    import android.content.BroadcastReceiver;&#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.content.DialogInterface;&#xD;&#xA;    import android.content.Intent;&#xD;&#xA;    import android.content.IntentFilter;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.os.Parcelable;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.widget.AdapterView;&#xD;&#xA;    import android.widget.ArrayAdapter;&#xD;&#xA;    import android.widget.ListView;&#xD;&#xA;    &#xD;&#xA;    import com.brianstacks.project1.JSONParser;&#xD;&#xA;    import com.brianstacks.project1.MainActivity;&#xD;&#xA;    import com.brianstacks.project1.Places;&#xD;&#xA;    import com.brianstacks.project1.PlacesAdapter;&#xD;&#xA;    import com.brianstacks.project1.R;&#xD;&#xA;    &#xD;&#xA;    import java.io.Serializable;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/27/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class MasterFragment extends ListFragment{&#xD;&#xA;    &#xD;&#xA;        public static final String TAG = ""MasterFragment.TAG"";&#xD;&#xA;        public static final String KEY = ""places"";&#xD;&#xA;        private OnListItemClickListener mListener;&#xD;&#xA;        private ArrayList<Places> placeList2;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public static MasterFragment newInstance(ArrayList<Places> placeList) {&#xD;&#xA;            MasterFragment masterFragment = new MasterFragment();&#xD;&#xA;    &#xD;&#xA;            Bundle args = new Bundle();&#xD;&#xA;    &#xD;&#xA;            args.putSerializable(""places"", placeList);&#xD;&#xA;    &#xD;&#xA;            masterFragment.setArguments(args);&#xD;&#xA;    &#xD;&#xA;            return masterFragment;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public interface OnListItemClickListener{&#xD;&#xA;            public void displayText(String myText);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void  onAttach(Activity activity){&#xD;&#xA;            super.onAttach(activity);&#xD;&#xA;    &#xD;&#xA;            if (activity instanceof OnListItemClickListener){&#xD;&#xA;                mListener = (OnListItemClickListener) activity;&#xD;&#xA;            }else {&#xD;&#xA;                throw new IllegalArgumentException(""Containing Activity must implement the OnListItemClicked"");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityCreated(Bundle _savedInstanceState) {&#xD;&#xA;            super.onActivityCreated(_savedInstanceState);&#xD;&#xA;            if (_savedInstanceState == null){&#xD;&#xA;                Bundle args = getArguments();&#xD;&#xA;                String myStrings=args.getString(""places"");&#xD;&#xA;                Log.v(""Places"",myStrings);&#xD;&#xA;    &#xD;&#xA;            /*String[] presidents = getResources().getStringArray(R.array.presidents);&#xD;&#xA;            //ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_list_item_1, presidents);&#xD;&#xA;            //PlacesAdapter adapter2 = new PlacesAdapter(this.getActivity(),R.layout.item_place,placeList);&#xD;&#xA;            //setListAdapter(adapter2);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onListItemClick(ListView _l, View _v, int _position, long _id) {&#xD;&#xA;            String president = (String)_l.getItemAtPosition(_position);&#xD;&#xA;            mListener.displayText(president);&#xD;&#xA;            */&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;HTTPManager.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import java.io.BufferedReader;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.io.InputStreamReader;&#xD;&#xA;    import java.net.HttpURLConnection;&#xD;&#xA;    import java.net.URL;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/20/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class HttpManager {&#xD;&#xA;    &#xD;&#xA;        public  static  String getData(String uri){&#xD;&#xA;            BufferedReader reader = null;&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                URL url = new URL(uri);&#xD;&#xA;                HttpURLConnection con = (HttpURLConnection) url.openConnection();&#xD;&#xA;    &#xD;&#xA;                StringBuilder sb = new StringBuilder();&#xD;&#xA;                reader = new BufferedReader(new InputStreamReader(con.getInputStream()));&#xD;&#xA;    &#xD;&#xA;                String line;&#xD;&#xA;                while ((line = reader.readLine()) != null){&#xD;&#xA;                    sb.append(line).append("""");&#xD;&#xA;                }&#xD;&#xA;                return sb.toString();&#xD;&#xA;    &#xD;&#xA;            }catch (Exception e){&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;            }finally {&#xD;&#xA;                if (reader!=null) {&#xD;&#xA;                    try {&#xD;&#xA;                        reader.close();&#xD;&#xA;                    } catch (IOException e) {&#xD;&#xA;                        e.printStackTrace();&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;JSONParser.java&#xD;&#xA;&#xD;&#xA;    package com.brianstacks.project1;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    import org.json.JSONArray;&#xD;&#xA;    import org.json.JSONException;&#xD;&#xA;    import org.json.JSONObject;&#xD;&#xA;    &#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/20/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class JSONParser {&#xD;&#xA;    &#xD;&#xA;        public static ArrayList<Places> parseFeed(String content) {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            JSONObject myObj;&#xD;&#xA;            try {&#xD;&#xA;                myObj = new JSONObject(content);&#xD;&#xA;                JSONArray result = myObj.getJSONArray(""results"");&#xD;&#xA;                ArrayList<Places> placeList = new ArrayList<>();&#xD;&#xA;    &#xD;&#xA;                for (int i = 0; i < result.length(); i++) {&#xD;&#xA;                    JSONObject obj = result.getJSONObject(i);&#xD;&#xA;                    Places place = new Places();&#xD;&#xA;                    place.setName(obj.getString(""name""));&#xD;&#xA;                    place.setFormatted_address(obj.getString(""formatted_address""));&#xD;&#xA;                    place.setTypes(obj.getString(""types""));&#xD;&#xA;                    //place.setPhotos(obj.getString(""photos""));&#xD;&#xA;    &#xD;&#xA;                    placeList.add(place);&#xD;&#xA;                }&#xD;&#xA;                return placeList;&#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;Places.java&#xD;&#xA;&#xD;&#xA;    import java.io.Serializable;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Brian Stacks&#xD;&#xA;     * on 10/22/14&#xD;&#xA;     * for FullSail.edu.&#xD;&#xA;     */&#xD;&#xA;    public class Places implements Serializable {&#xD;&#xA;    &#xD;&#xA;        private String pName;&#xD;&#xA;        private String pTypes;&#xD;&#xA;        private String pFormatted_address;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public Places(){&#xD;&#xA;            pName ="""";&#xD;&#xA;            pTypes ="""";&#xD;&#xA;            pFormatted_address = """";&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public String getName() {&#xD;&#xA;            return pName;&#xD;&#xA;        }&#xD;&#xA;        public void setName(String name) {&#xD;&#xA;            pName = name;&#xD;&#xA;        }&#xD;&#xA;        public String getTypes() {&#xD;&#xA;            return pTypes;&#xD;&#xA;        }&#xD;&#xA;        public void  setTypes(String types) {&#xD;&#xA;            pTypes= types;&#xD;&#xA;        }&#xD;&#xA;        public String getFormatted_address() {&#xD;&#xA;            return pFormatted_address;&#xD;&#xA;        }&#xD;&#xA;        public void setFormatted_address(String formatted_address) {&#xD;&#xA;            pFormatted_address=formatted_address;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Any help is much appreciated &#xD;&#xA;&#xD;&#xA;ALSO was reading this post but to no avail  [LINK](https://stackoverflow.com/questions/11602786/nullpointerexception-in-asynctask-onpostexecute)!";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
