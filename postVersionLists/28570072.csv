Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
83991428;28570072;2582173;2;5369da88-3d6b-4308-b87d-66fb3e4dae89;2015-02-17 20:00:13.0;"There's probably something really dumb that I'm missing...&#xD;&#xA;&#xD;&#xA;After adding the fixture data to the areas route, the 'areas' template won't render.  Everything outside of a template still renders fine.  If I comment out the line where I return data to be passed in as the model (i.e. '//return this.store.find('gamearea', 1);'), everything renders as expected, minus the fixture data, obviously.  When the template doesn't render properly, Ember doesn't throw any kind of error either.  &#xD;&#xA;&#xD;&#xA;Eventually, I'll replace the divs inside gamearea entirely with game-zone components. I'm sort of in an in-between stage at the moment.  Anyway, thanks for the help.&#xD;&#xA;&#xD;&#xA;Here's the relevant code:&#xD;&#xA;&#xD;&#xA;<!-- begin snippet: js hide: false -->&#xD;&#xA;&#xD;&#xA;<!-- language: lang-js -->&#xD;&#xA;&#xD;&#xA;    //my areas route:&#xD;&#xA;&#xD;&#xA;    Areas.Router.map(function () {&#xD;&#xA;    	this.resource('areas', {path: '/'});&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    Areas.AreasRoute = Ember.Route.extend({&#xD;&#xA;    	model: function () {&#xD;&#xA;    		return this.store.find('gamearea', 1);&#xD;&#xA;    	},&#xD;&#xA;    	&#xD;&#xA;    	actions: {&#xD;&#xA;    		drawCard: function () {&#xD;&#xA;    			var $cards = $(""#lib1"").children();&#xD;&#xA;    			$(""#hand1"").append($cards[0]);&#xD;&#xA;    			var cards = this.store.all('card').filterBy('location', 'lib1');&#xD;&#xA;    			console.log(cards.objectAt(0).get('location'));&#xD;&#xA;    			cards.objectAt(0).set('location', ""hand1"");&#xD;&#xA;    			console.log(cards.objectAt(0).get('location'));&#xD;&#xA;    			&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    //the fixture data and model definitions:&#xD;&#xA;&#xD;&#xA;    Areas.Card = DS.Model.extend({&#xD;&#xA;    	name: DS.attr(""string""),&#xD;&#xA;    	img: function() {&#xD;&#xA;    		return (""http://mtgimage.com/card/"" + this.get(""name"") + "".jpg"");&#xD;&#xA;    	}.property(""name""),&#xD;&#xA;    	domid: function () {&#xD;&#xA;    		return (""card""+this.get(""id""));&#xD;&#xA;    	}.property(""id""),&#xD;&#xA;    	location: DS.attr('string', {defaultValue: ""lib1""})&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    Areas.Gamearea = DS.Model.extend({&#xD;&#xA;    	zones: DS.hasMany('zones', {async: true})&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    Areas.Zone = DS.Model.extend({&#xD;&#xA;    	name: DS.attr('string'),&#xD;&#xA;    	cards: DS.hasMany('cards', {async: true}),&#xD;&#xA;    	zone: DS.belongsTo('zone')&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    Areas.Zones.reopenClass({&#xD;&#xA;    FIXTURES: [&#xD;&#xA;&#xD;&#xA;    	{id: 1, name: 'lib1', cards: [1,2,3,4,5]},&#xD;&#xA;    	{id: 2, name: 'lib2', cards: [6,7,8,9,10]}&#xD;&#xA;    	]&#xD;&#xA;&#xD;&#xA;    });&#xD;&#xA;    Areas.Cards.reopenClass({&#xD;&#xA;    FIXTURES:  &#xD;&#xA;    [		&#xD;&#xA;    		{&#xD;&#xA;    			id: 1,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 1&#xD;&#xA;    		},{&#xD;&#xA;    			id: 2,&#xD;&#xA;    			name: ""Jace, the Mind Sculptor"",&#xD;&#xA;    			zone: 1&#xD;&#xA;    		},{&#xD;&#xA;    			id: 3,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 1&#xD;&#xA;    		},{&#xD;&#xA;    			id: 4,&#xD;&#xA;    			name: ""Counterspell"",&#xD;&#xA;    			zone: 1&#xD;&#xA;    		},{&#xD;&#xA;    			id: 5,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 1&#xD;&#xA;    		},&#xD;&#xA;    		{&#xD;&#xA;    			id: 6,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 2&#xD;&#xA;    		},{&#xD;&#xA;    			id: 7,&#xD;&#xA;    			name: ""Jace, the Mind Sculptor"",&#xD;&#xA;    			zone: 2&#xD;&#xA;    		},{&#xD;&#xA;    			id: 8,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 2&#xD;&#xA;    		},{&#xD;&#xA;    			id: 9,&#xD;&#xA;    			name: ""Counterspell"",&#xD;&#xA;    			zone: 2&#xD;&#xA;    		},{&#xD;&#xA;    			id: 10,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 2&#xD;&#xA;    		}&#xD;&#xA;    ]&#xD;&#xA;    });&#xD;&#xA;    Areas.Gamearea.reopenClass({&#xD;&#xA;    FIXTURES: &#xD;&#xA;    {&#xD;&#xA;    	id: 1,&#xD;&#xA;    	zones: [1,2]&#xD;&#xA;    }&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;<!-- language: lang-html -->&#xD;&#xA;&#xD;&#xA;    <script type=""text/x-handlebars"" data-template-name=""areas"">&#xD;&#xA;    	<div id=""gamearea"">&#xD;&#xA;    		<div id=""top1"" class=""top p1"">Top</div><button id=""deck1"" class=""deck p1"" {{action 'drawCard'}}></button><div id=""bot1"" class=""bot p1"">Bot</div>&#xD;&#xA;    		<div id=""lib1"" class=""zone display-zone p1 library"">&#xD;&#xA;&#xD;&#xA;    		</div>&#xD;&#xA;    		&#xD;&#xA;    		{{game-zone cards=model.lib1}}&#xD;&#xA;    		{{game-zone cards=model.hand1}}&#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;    		<div id=""hand1"" class=""zone display-zone p1 hand"">&#xD;&#xA;    		</div>&#xD;&#xA;    		<div id=""battlefield1"" class=""zone display-zone p1 battlefield""></div>&#xD;&#xA;    		<div id=""graveyard1"" class=""zone display-zone p1 graveyard""></div>&#xD;&#xA;    		<div id=""exile1"" class=""zone display-zone p1 exile""></div>&#xD;&#xA;    		<div id=""revealed1"" class=""zone display-zone p1 revealed""></div>&#xD;&#xA;    		<br>&#xD;&#xA;    		<hr>&#xD;&#xA;    		<br>&#xD;&#xA;    		<div id=""top2"" class=""top p2"">Top</div><div id=""deck2"" class=""deck p2""></div><div id=""bot2"" class=""bot p2"">Bot</div>&#xD;&#xA;    		<div id=""lib2"" class=""zone display-zone p2 library""></div>&#xD;&#xA;    		<div id=""hand2"" class=""zone display-zone p2 hand""></div>&#xD;&#xA;    		<div id=""battlefield2"" class=""xone display-zone p2 battlefield""></div>&#xD;&#xA;    		<div id=""graveyard2"" class=""zone display-zone p2 graveyard""></div>&#xD;&#xA;    		<div id=""exile2"" class=""zone display-zone p2 exile""></div>&#xD;&#xA;    		<div id=""revealed2"" class=""zone display-zone p2 revealed""></div>&#xD;&#xA;    		&#xD;&#xA;    		<button type=""button"" class=""btn btn-primary menu-btn"">Menu</button>&#xD;&#xA;    		<button type=""button"" class=""btn btn-success to-top"">To Top</button>&#xD;&#xA;    		&#xD;&#xA;    	</div>&#xD;&#xA;    </script>&#xD;&#xA;&#xD;&#xA;    <script type=""text/x-handlebars"" data-template-name=""components/card-component"">&#xD;&#xA;    	<img {{bind-attr id=card.domid alt=card.name src=card.img}} draggable=""true"" class=""card"" {{action ""droppedCard"" on=""drop""}}>&#xD;&#xA;    </script>&#xD;&#xA;&#xD;&#xA;    <script type=""text/x-handlebars"" data-template-name=""components/game-zone"">&#xD;&#xA;    	{{#each card in cards}}&#xD;&#xA;    		{{card-component card=card}}&#xD;&#xA;    	{{/each}}&#xD;&#xA;    </script>&#xD;&#xA;&#xD;&#xA;<!-- end snippet -->&#xD;&#xA;&#xD;&#xA;";;
84014646;28570072;2582173;5;82607fee-b3e7-43d4-b2f3-348c25086b09;2015-02-18 04:55:42.0;"There's probably something really dumb that I'm missing...&#xD;&#xA;&#xD;&#xA;After adding the fixture data to the areas route, the 'areas' template won't render.  Everything outside of a template still renders fine.  If I comment out the line where I return data to be passed in as the model (i.e. '//return this.store.find('gamearea', 1);'), everything renders as expected, minus the fixture data, obviously.  When the template doesn't render properly, Ember doesn't throw any kind of error either.  &#xD;&#xA;&#xD;&#xA;Eventually, I'll replace the divs inside gamearea entirely with game-zone components. I'm sort of in an in-between stage at the moment.  Anyway, thanks for the help.&#xD;&#xA;&#xD;&#xA;Here's the relevant code:&#xD;&#xA;&#xD;&#xA;EDIT: The code is slightly outdated, best bet would be to go to the jsbin here:&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;[jsbin.com/jomema/1/edit?html,css,js,output][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;<!-- begin snippet: js hide: false -->&#xD;&#xA;&#xD;&#xA;<!-- language: lang-js -->&#xD;&#xA;&#xD;&#xA;    //my areas route:&#xD;&#xA;&#xD;&#xA;    Areas.Router.map(function () {&#xD;&#xA;    	this.resource('areas', {path: '/'});&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    Areas.AreasRoute = Ember.Route.extend({&#xD;&#xA;    	model: function () {&#xD;&#xA;    		return this.store.find('gamearea', 1);&#xD;&#xA;    	},&#xD;&#xA;    	&#xD;&#xA;    	actions: {&#xD;&#xA;    		drawCard: function () {&#xD;&#xA;    			var $cards = $(""#lib1"").children();&#xD;&#xA;    			$(""#hand1"").append($cards[0]);&#xD;&#xA;    			var cards = this.store.all('card').filterBy('location', 'lib1');&#xD;&#xA;    			console.log(cards.objectAt(0).get('location'));&#xD;&#xA;    			cards.objectAt(0).set('location', ""hand1"");&#xD;&#xA;    			console.log(cards.objectAt(0).get('location'));&#xD;&#xA;    			&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    //the fixture data and model definitions:&#xD;&#xA;&#xD;&#xA;    Areas.Card = DS.Model.extend({&#xD;&#xA;    	name: DS.attr(""string""),&#xD;&#xA;    	img: function() {&#xD;&#xA;    		return (""http://mtgimage.com/card/"" + this.get(""name"") + "".jpg"");&#xD;&#xA;    	}.property(""name""),&#xD;&#xA;    	domid: function () {&#xD;&#xA;    		return (""card""+this.get(""id""));&#xD;&#xA;    	}.property(""id""),&#xD;&#xA;    	location: DS.attr('string', {defaultValue: ""lib1""})&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    Areas.Gamearea = DS.Model.extend({&#xD;&#xA;    	zones: DS.hasMany('zones', {async: true})&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    Areas.Zone = DS.Model.extend({&#xD;&#xA;    	name: DS.attr('string'),&#xD;&#xA;    	cards: DS.hasMany('cards', {async: true}),&#xD;&#xA;    	zone: DS.belongsTo('zone')&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    Areas.Zones.reopenClass({&#xD;&#xA;    FIXTURES: [&#xD;&#xA;&#xD;&#xA;    	{id: 1, name: 'lib1', cards: [1,2,3,4,5]},&#xD;&#xA;    	{id: 2, name: 'lib2', cards: [6,7,8,9,10]}&#xD;&#xA;    	]&#xD;&#xA;&#xD;&#xA;    });&#xD;&#xA;    Areas.Cards.reopenClass({&#xD;&#xA;    FIXTURES:  &#xD;&#xA;    [		&#xD;&#xA;    		{&#xD;&#xA;    			id: 1,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 1&#xD;&#xA;    		},{&#xD;&#xA;    			id: 2,&#xD;&#xA;    			name: ""Jace, the Mind Sculptor"",&#xD;&#xA;    			zone: 1&#xD;&#xA;    		},{&#xD;&#xA;    			id: 3,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 1&#xD;&#xA;    		},{&#xD;&#xA;    			id: 4,&#xD;&#xA;    			name: ""Counterspell"",&#xD;&#xA;    			zone: 1&#xD;&#xA;    		},{&#xD;&#xA;    			id: 5,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 1&#xD;&#xA;    		},&#xD;&#xA;    		{&#xD;&#xA;    			id: 6,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 2&#xD;&#xA;    		},{&#xD;&#xA;    			id: 7,&#xD;&#xA;    			name: ""Jace, the Mind Sculptor"",&#xD;&#xA;    			zone: 2&#xD;&#xA;    		},{&#xD;&#xA;    			id: 8,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 2&#xD;&#xA;    		},{&#xD;&#xA;    			id: 9,&#xD;&#xA;    			name: ""Counterspell"",&#xD;&#xA;    			zone: 2&#xD;&#xA;    		},{&#xD;&#xA;    			id: 10,&#xD;&#xA;    			name: ""Island"",&#xD;&#xA;    			zone: 2&#xD;&#xA;    		}&#xD;&#xA;    ]&#xD;&#xA;    });&#xD;&#xA;    Areas.Gamearea.reopenClass({&#xD;&#xA;    FIXTURES: &#xD;&#xA;    {&#xD;&#xA;    	id: 1,&#xD;&#xA;    	zones: [1,2]&#xD;&#xA;    }&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;<!-- language: lang-html -->&#xD;&#xA;&#xD;&#xA;    <script type=""text/x-handlebars"" data-template-name=""areas"">&#xD;&#xA;    	<div id=""gamearea"">&#xD;&#xA;    		<div id=""top1"" class=""top p1"">Top</div><button id=""deck1"" class=""deck p1"" {{action 'drawCard'}}></button><div id=""bot1"" class=""bot p1"">Bot</div>&#xD;&#xA;    		<div id=""lib1"" class=""zone display-zone p1 library"">&#xD;&#xA;&#xD;&#xA;    		</div>&#xD;&#xA;    		&#xD;&#xA;    		{{game-zone cards=model.lib1}}&#xD;&#xA;    		{{game-zone cards=model.hand1}}&#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;    		<div id=""hand1"" class=""zone display-zone p1 hand"">&#xD;&#xA;    		</div>&#xD;&#xA;    		<div id=""battlefield1"" class=""zone display-zone p1 battlefield""></div>&#xD;&#xA;    		<div id=""graveyard1"" class=""zone display-zone p1 graveyard""></div>&#xD;&#xA;    		<div id=""exile1"" class=""zone display-zone p1 exile""></div>&#xD;&#xA;    		<div id=""revealed1"" class=""zone display-zone p1 revealed""></div>&#xD;&#xA;    		<br>&#xD;&#xA;    		<hr>&#xD;&#xA;    		<br>&#xD;&#xA;    		<div id=""top2"" class=""top p2"">Top</div><div id=""deck2"" class=""deck p2""></div><div id=""bot2"" class=""bot p2"">Bot</div>&#xD;&#xA;    		<div id=""lib2"" class=""zone display-zone p2 library""></div>&#xD;&#xA;    		<div id=""hand2"" class=""zone display-zone p2 hand""></div>&#xD;&#xA;    		<div id=""battlefield2"" class=""xone display-zone p2 battlefield""></div>&#xD;&#xA;    		<div id=""graveyard2"" class=""zone display-zone p2 graveyard""></div>&#xD;&#xA;    		<div id=""exile2"" class=""zone display-zone p2 exile""></div>&#xD;&#xA;    		<div id=""revealed2"" class=""zone display-zone p2 revealed""></div>&#xD;&#xA;    		&#xD;&#xA;    		<button type=""button"" class=""btn btn-primary menu-btn"">Menu</button>&#xD;&#xA;    		<button type=""button"" class=""btn btn-success to-top"">To Top</button>&#xD;&#xA;    		&#xD;&#xA;    	</div>&#xD;&#xA;    </script>&#xD;&#xA;&#xD;&#xA;    <script type=""text/x-handlebars"" data-template-name=""components/card-component"">&#xD;&#xA;    	<img {{bind-attr id=card.domid alt=card.name src=card.img}} draggable=""true"" class=""card"" {{action ""droppedCard"" on=""drop""}}>&#xD;&#xA;    </script>&#xD;&#xA;&#xD;&#xA;    <script type=""text/x-handlebars"" data-template-name=""components/game-zone"">&#xD;&#xA;    	{{#each card in cards}}&#xD;&#xA;    		{{card-component card=card}}&#xD;&#xA;    	{{/each}}&#xD;&#xA;    </script>&#xD;&#xA;&#xD;&#xA;<!-- end snippet -->&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://jsbin.com/jomema/1/edit?html,css,js,output";;added 201 characters in body
