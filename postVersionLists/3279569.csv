Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
6809089;3279569;395636;2;3ce54660-188e-4716-bea2-0e12431a39e3;2010-07-19 08:47:00.0;"I have this code running on the server part of my Silverlight application with WCF Ria Services:&#xD;&#xA;&#xD;&#xA;    public IQueryable<PersonePM> GetPersoneByCognome(string cognome)&#xD;&#xA;        {&#xD;&#xA;            return&#xD;&#xA;                (from p in ObjectContext.Persone&#xD;&#xA;                 where p.Cognome.ToLower().Contains(cognome.Trim().ToLower())&#xD;&#xA;                 select new PersonePM&#xD;&#xA;                 {&#xD;&#xA;                     Id = p.ID,&#xD;&#xA;                     Cognome = p.Cognome,&#xD;&#xA;                     Nome = p.Nome,&#xD;&#xA;                     Sesso = p.IsMaschio == true ? ""M"" : ""F"",&#xD;&#xA;                     StringaCognomeNome = p.Cognome + "" "" + p.Nome,&#xD;&#xA;                     DataNascita = p.DataNascita == null ? DateTime.MinValue : p.DataNascita.Value,&#xD;&#xA;                     LuogoNascita = (p.IsMaschio == true ? ""Nato a "" : ""Nata a "") + p.Citta.Denominazione + "" ("" + p.Citta.Provincia.Trim() + "")"",&#xD;&#xA;                     CodiceFiscale = p.CodiceFiscale,&#xD;&#xA;                     StringaNascita =&#xD;&#xA;                        (p.IsMaschio == true ? ""Nato a "" : ""Nata a "") + p.Citta.Denominazione + "" ("" + p.Citta.Provincia.Trim() + "")""&#xD;&#xA;                     +&#xD;&#xA;                     (p.DataNascita != null ?&#xD;&#xA;                         (((p.DataNascita.Value.Day == 1) || (p.DataNascita.Value.Day == 8) || (p.DataNascita.Value.Day == 11)) ? "" l'"" : "" il "") +&#xD;&#xA;                         p.DataNascita.Value : string.Empty)&#xD;&#xA;                 });            &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;    public class PersonePM&#xD;&#xA;    {&#xD;&#xA;        [Key]&#xD;&#xA;        public Guid Id { get; set; }&#xD;&#xA;        public string Cognome { get; set; }&#xD;&#xA;        public string Nome { get; set; }&#xD;&#xA;        public string Sesso { get; set; }&#xD;&#xA;        public string StringaCognomeNome { get; set; }&#xD;&#xA;        public DateTime DataNascita { get; set; }&#xD;&#xA;        public string LuogoNascita { get; set; }&#xD;&#xA;        public string StringaNascita { get; set; }&#xD;&#xA;        public string CodiceFiscale { get; set; }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Because of Italian language, I'd like to format where a person is born and when in a common language form for best users comprehension.&#xD;&#xA;But the code above doesen't work because Linq-to-Entities is not capable of trasform a DateTime to a String (the whole story is a little different.. but let's say that for short); the error is thrown here:&#xD;&#xA;&#xD;&#xA;    StringaNascita =&#xD;&#xA;                        (p.IsMaschio == true ? ""Nato a "" : ""Nata a "") + p.Citta.Denominazione + "" ("" + p.Citta.Provincia.Trim() + "")""&#xD;&#xA;                     +&#xD;&#xA;                     (p.DataNascita != null ?&#xD;&#xA;                         (((p.DataNascita.Value.Day == 1) || (p.DataNascita.Value.Day == 8) || (p.DataNascita.Value.Day == 11)) ? "" l'"" : "" il "") +&#xD;&#xA;                         p.DataNascita.Value : string.Empty)&#xD;&#xA;&#xD;&#xA;The problem is well known and I found diffrent solutions but no one with projecting on a custom class like the one I use as a presentation model.&#xD;&#xA;It's about a week I'm working on this problem and I haven't figured out a solution yet.&#xD;&#xA;Any ideas?&#xD;&#xA;&#xD;&#xA;Thank you!";;
6814335;3279569;395636;5;aa7c8f83-720e-499e-b71f-5ef873252bd9;2010-07-19 14:29:01.0;"I have this code running on the server part of my Silverlight application with WCF Ria Services:&#xD;&#xA;&#xD;&#xA;    public IQueryable<PersonePM> GetPersoneByCognome(string cognome)&#xD;&#xA;        {&#xD;&#xA;            return&#xD;&#xA;                (from p in ObjectContext.Persone&#xD;&#xA;                 where p.Cognome.ToLower().Contains(cognome.Trim().ToLower())&#xD;&#xA;                 select new PersonePM&#xD;&#xA;                 {&#xD;&#xA;                     Id = p.ID,&#xD;&#xA;                     Cognome = p.Cognome,&#xD;&#xA;                     Nome = p.Nome,&#xD;&#xA;                     Sesso = p.IsMaschio == true ? ""M"" : ""F"",&#xD;&#xA;                     StringaCognomeNome = p.Cognome + "" "" + p.Nome,&#xD;&#xA;                     DataNascita = p.DataNascita == null ? DateTime.MinValue : p.DataNascita.Value,&#xD;&#xA;                     LuogoNascita = (p.IsMaschio == true ? ""Nato a "" : ""Nata a "") + p.Citta.Denominazione + "" ("" + p.Citta.Provincia.Trim() + "")"",&#xD;&#xA;                     CodiceFiscale = p.CodiceFiscale,&#xD;&#xA;                     StringaNascita =&#xD;&#xA;                        (p.IsMaschio == true ? ""Nato a "" : ""Nata a "") + p.Citta.Denominazione + "" ("" + p.Citta.Provincia.Trim() + "")""&#xD;&#xA;                     +&#xD;&#xA;                     (p.DataNascita != null ?&#xD;&#xA;                         (((p.DataNascita.Value.Day == 1) || (p.DataNascita.Value.Day == 8) || (p.DataNascita.Value.Day == 11)) ? "" l'"" : "" il "") +&#xD;&#xA;                         p.DataNascita.Value : string.Empty)&#xD;&#xA;                 });            &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;    public class PersonePM&#xD;&#xA;    {&#xD;&#xA;        [Key]&#xD;&#xA;        public Guid Id { get; set; }&#xD;&#xA;        public string Cognome { get; set; }&#xD;&#xA;        public string Nome { get; set; }&#xD;&#xA;        public string Sesso { get; set; }&#xD;&#xA;        public string StringaCognomeNome { get; set; }&#xD;&#xA;        public DateTime DataNascita { get; set; }&#xD;&#xA;        public string LuogoNascita { get; set; }&#xD;&#xA;        public string StringaNascita { get; set; }&#xD;&#xA;        public string CodiceFiscale { get; set; }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Because of Italian language, I'd like to format where a person is born and when in a common language form for best users comprehension.&#xD;&#xA;But the code above doesen't work because Linq-to-Entities is not capable of trasform a DateTime to a String (the whole story is a little different.. but let's say that for short); the error is thrown here:&#xD;&#xA;&#xD;&#xA;    StringaNascita =&#xD;&#xA;                        (p.IsMaschio == true ? ""Nato a "" : ""Nata a "") + p.Citta.Denominazione + "" ("" + p.Citta.Provincia.Trim() + "")""&#xD;&#xA;                     +&#xD;&#xA;                     (p.DataNascita != null ?&#xD;&#xA;                         (((p.DataNascita.Value.Day == 1) || (p.DataNascita.Value.Day == 8) || (p.DataNascita.Value.Day == 11)) ? "" l'"" : "" il "") +&#xD;&#xA;                         p.DataNascita.Value : string.Empty)&#xD;&#xA;&#xD;&#xA;The problem is well known and I found diffrent solutions but no one with projecting on a custom class like the one I use as a presentation model.&#xD;&#xA;It's about a week I'm working on this problem and I haven't figured out a solution yet.&#xD;&#xA;Any ideas?&#xD;&#xA;&#xD;&#xA;Thank you!&#xD;&#xA;&#xD;&#xA;**EDIT Jul 19 16.27GMT+1**&#xD;&#xA;&#xD;&#xA;If I comment out this part&#xD;&#xA;&#xD;&#xA;    StringaNascita =&#xD;&#xA;                        (p.IsMaschio == true ? ""Nato a "" : ""Nata a "") + p.Citta.Denominazione + "" ("" + p.Citta.Provincia.Trim() + "")""&#xD;&#xA;                     +&#xD;&#xA;                     (p.DataNascita != null ?&#xD;&#xA;                         (((p.DataNascita.Value.Day == 1) || (p.DataNascita.Value.Day == 8) || (p.DataNascita.Value.Day == 11)) ? "" l'"" : "" il "") +&#xD;&#xA;                         p.DataNascita.Value : string.Empty)&#xD;&#xA;&#xD;&#xA;everything works fine.";;added 527 characters in body
